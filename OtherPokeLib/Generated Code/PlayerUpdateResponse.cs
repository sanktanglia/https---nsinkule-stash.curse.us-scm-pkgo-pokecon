// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerUpdateResponse.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PokemonGo.RocketAPI.GeneratedCode {

  /// <summary>Holder for reflection information generated from PlayerUpdateResponse.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PlayerUpdateResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerUpdateResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerUpdateResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQbGF5ZXJVcGRhdGVSZXNwb25zZS5wcm90bxIhUG9rZW1vbkdvLlJvY2tl",
            "dEFQSS5HZW5lcmF0ZWRDb2RlIk4KFFBsYXllclVwZGF0ZVJlc3BvbnNlEhMK",
            "C1dpbGRQb2tlbW9uGAEgASgFEgwKBEZvcnQYAiABKAUSEwoLRm9ydHNOZWFy",
            "YnkYAyABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.PlayerUpdateResponse), global::PokemonGo.RocketAPI.GeneratedCode.PlayerUpdateResponse.Parser, new[]{ "WildPokemon", "Fort", "FortsNearby" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PlayerUpdateResponse : pb::IMessage<PlayerUpdateResponse> {
    private static readonly pb::MessageParser<PlayerUpdateResponse> _parser = new pb::MessageParser<PlayerUpdateResponse>(() => new PlayerUpdateResponse());
    public static pb::MessageParser<PlayerUpdateResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGo.RocketAPI.GeneratedCode.PlayerUpdateResponseReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public PlayerUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public PlayerUpdateResponse(PlayerUpdateResponse other) : this() {
      wildPokemon_ = other.wildPokemon_;
      fort_ = other.fort_;
      fortsNearby_ = other.fortsNearby_;
    }

    public PlayerUpdateResponse Clone() {
      return new PlayerUpdateResponse(this);
    }

    /// <summary>Field number for the "WildPokemon" field.</summary>
    public const int WildPokemonFieldNumber = 1;
    private int wildPokemon_;
    public int WildPokemon {
      get { return wildPokemon_; }
      set {
        wildPokemon_ = value;
      }
    }

    /// <summary>Field number for the "Fort" field.</summary>
    public const int FortFieldNumber = 2;
    private int fort_;
    public int Fort {
      get { return fort_; }
      set {
        fort_ = value;
      }
    }

    /// <summary>Field number for the "FortsNearby" field.</summary>
    public const int FortsNearbyFieldNumber = 3;
    private int fortsNearby_;
    public int FortsNearby {
      get { return fortsNearby_; }
      set {
        fortsNearby_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as PlayerUpdateResponse);
    }

    public bool Equals(PlayerUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WildPokemon != other.WildPokemon) return false;
      if (Fort != other.Fort) return false;
      if (FortsNearby != other.FortsNearby) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (WildPokemon != 0) hash ^= WildPokemon.GetHashCode();
      if (Fort != 0) hash ^= Fort.GetHashCode();
      if (FortsNearby != 0) hash ^= FortsNearby.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (WildPokemon != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WildPokemon);
      }
      if (Fort != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Fort);
      }
      if (FortsNearby != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FortsNearby);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (WildPokemon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WildPokemon);
      }
      if (Fort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fort);
      }
      if (FortsNearby != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FortsNearby);
      }
      return size;
    }

    public void MergeFrom(PlayerUpdateResponse other) {
      if (other == null) {
        return;
      }
      if (other.WildPokemon != 0) {
        WildPokemon = other.WildPokemon;
      }
      if (other.Fort != 0) {
        Fort = other.Fort;
      }
      if (other.FortsNearby != 0) {
        FortsNearby = other.FortsNearby;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            WildPokemon = input.ReadInt32();
            break;
          }
          case 16: {
            Fort = input.ReadInt32();
            break;
          }
          case 24: {
            FortsNearby = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
