// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MapObjectsResponse.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PokemonGo.RocketAPI.GeneratedCode {

  /// <summary>Holder for reflection information generated from MapObjectsResponse.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class MapObjectsResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for MapObjectsResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MapObjectsResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhNYXBPYmplY3RzUmVzcG9uc2UucHJvdG8SIVBva2Vtb25Hby5Sb2NrZXRB",
            "UEkuR2VuZXJhdGVkQ29kZSLoNgoSTWFwT2JqZWN0c1Jlc3BvbnNlEhAKCHVu",
            "a25vd24xGAEgASgFEhAKCHVua25vd24yGAIgASgDEg8KB2FwaV91cmwYAyAB",
            "KAkSUAoIdW5rbm93bjYYBiABKAsyPi5Qb2tlbW9uR28uUm9ja2V0QVBJLkdl",
            "bmVyYXRlZENvZGUuTWFwT2JqZWN0c1Jlc3BvbnNlLlVua25vd242ElAKCHVu",
            "a25vd243GAcgASgLMj4uUG9rZW1vbkdvLlJvY2tldEFQSS5HZW5lcmF0ZWRD",
            "b2RlLk1hcE9iamVjdHNSZXNwb25zZS5Vbmtub3duNxJOCgdwYXlsb2FkGGQg",
            "AygLMj0uUG9rZW1vbkdvLlJvY2tldEFQSS5HZW5lcmF0ZWRDb2RlLk1hcE9i",
            "amVjdHNSZXNwb25zZS5QYXlsb2FkEhQKDGVycm9yTWVzc2FnZRhlIAEoCRqV",
            "AQoIVW5rbm93bjYSEAoIdW5rbm93bjEYASABKAUSWQoIdW5rbm93bjIYAiAB",
            "KAsyRy5Qb2tlbW9uR28uUm9ja2V0QVBJLkdlbmVyYXRlZENvZGUuTWFwT2Jq",
            "ZWN0c1Jlc3BvbnNlLlVua25vd242LlVua25vd24yGhwKCFVua25vd24yEhAK",
            "CHVua25vd24xGAEgASgMGkMKCFVua25vd243EhEKCXVua25vd243MRgBIAEo",
            "DBIRCgl1bmtub3duNzIYAiABKAMSEQoJdW5rbm93bjczGAMgASgMGrUyCgdQ",
            "YXlsb2FkElwKB3Byb2ZpbGUYASADKAsySy5Qb2tlbW9uR28uUm9ja2V0QVBJ",
            "LkdlbmVyYXRlZENvZGUuTWFwT2JqZWN0c1Jlc3BvbnNlLlBheWxvYWQuQ2xp",
            "ZW50TWFwQ2VsbBIVCg11bmtub3dubnVtYmVyGAIgASgFGqQGCg1DbGllbnRN",
            "YXBDZWxsEhAKCFMyQ2VsbElkGAEgASgEEhIKCkFzT2ZUaW1lTXMYAiABKAMS",
            "XAoERm9ydBgDIAMoCzJOLlBva2Vtb25Hby5Sb2NrZXRBUEkuR2VuZXJhdGVk",
            "Q29kZS5NYXBPYmplY3RzUmVzcG9uc2UuUGF5bG9hZC5Qb2tlbW9uRm9ydFBy",
            "b3RvEmcKClNwYXduUG9pbnQYBCADKAsyUy5Qb2tlbW9uR28uUm9ja2V0QVBJ",
            "LkdlbmVyYXRlZENvZGUuTWFwT2JqZWN0c1Jlc3BvbnNlLlBheWxvYWQuQ2xp",
            "ZW50U3Bhd25Qb2ludFByb3RvEmMKC1dpbGRQb2tlbW9uGAUgAygLMk4uUG9r",
            "ZW1vbkdvLlJvY2tldEFQSS5HZW5lcmF0ZWRDb2RlLk1hcE9iamVjdHNSZXNw",
            "b25zZS5QYXlsb2FkLldpbGRQb2tlbW9uUHJvdG8SFwoPSXNUcnVuY2F0ZWRM",
            "aXN0GAcgASgIEmoKC0ZvcnRTdW1tYXJ5GAggAygLMlUuUG9rZW1vbkdvLlJv",
            "Y2tldEFQSS5HZW5lcmF0ZWRDb2RlLk1hcE9iamVjdHNSZXNwb25zZS5QYXls",
            "b2FkLlBva2Vtb25TdW1tYXJ5Rm9ydFByb3RvEnAKE0RlY2ltYXRlZFNwYXdu",
            "UG9pbnQYCSADKAsyUy5Qb2tlbW9uR28uUm9ja2V0QVBJLkdlbmVyYXRlZENv",
            "ZGUuTWFwT2JqZWN0c1Jlc3BvbnNlLlBheWxvYWQuQ2xpZW50U3Bhd25Qb2lu",
            "dFByb3RvEmEKCk1hcFBva2Vtb24YCiADKAsyTS5Qb2tlbW9uR28uUm9ja2V0",
            "QVBJLkdlbmVyYXRlZENvZGUuTWFwT2JqZWN0c1Jlc3BvbnNlLlBheWxvYWQu",
            "TWFwUG9rZW1vblByb3RvEmcKDU5lYXJieVBva2Vtb24YCyADKAsyUC5Qb2tl",
            "bW9uR28uUm9ja2V0QVBJLkdlbmVyYXRlZENvZGUuTWFwT2JqZWN0c1Jlc3Bv",
            "bnNlLlBheWxvYWQuTmVhcmJ5UG9rZW1vblByb3RvGpUBCgtXaWxkUG9rZW1v",
            "bhIQCghVbmlxdWVJZBgBIAEoCRIRCglQb2tlbW9uSWQYAiABKAkSYQoHcG9r",
            "ZW1vbhgLIAMoCzJQLlBva2Vtb25Hby5Sb2NrZXRBUEkuR2VuZXJhdGVkQ29k",
            "ZS5NYXBPYmplY3RzUmVzcG9uc2UuUGF5bG9hZC5OZWFyYnlQb2tlbW9uUHJv",
            "dG8a3AEKD01hcFBva2Vtb25Qcm90bxIUCgxTcGF3bnBvaW50SWQYASABKAkS",
            "EwoLRW5jb3VudGVySWQYAiABKAYSXwoNUG9rZWRleFR5cGVJZBgDIAEoDjJI",
            "LlBva2Vtb25Hby5Sb2NrZXRBUEkuR2VuZXJhdGVkQ29kZS5NYXBPYmplY3Rz",
            "UmVzcG9uc2UuUGF5bG9hZC5Qb2tlbW9uSWRzEhgKEEV4cGlyYXRpb25UaW1l",
            "TXMYBCABKAMSEAoITGF0aXR1ZGUYBSABKAESEQoJTG9uZ2l0dWRlGAYgASgB",
            "GpQDChBQb2tlbW9uRm9ydFByb3RvEg4KBkZvcnRJZBgBIAEoCRIWCg5MYXN0",
            "TW9kaWZpZWRNcxgCIAEoAxIQCghMYXRpdHVkZRgDIAEoARIRCglMb25naXR1",
            "ZGUYBCABKAESDAoEVGVhbRgFIAEoBRIWCg5HdWFyZFBva2Vtb25JZBgGIAEo",
            "BRIZChFHdWFyZFBva2Vtb25MZXZlbBgHIAEoBRIPCgdFbmFibGVkGAggASgI",
            "EhAKCEZvcnRUeXBlGAkgASgFEhEKCUd5bVBvaW50cxgKIAEoAxISCgpJc0lu",
            "QmF0dGxlGAsgASgIEmQKDUFjdGl2ZVBva2Vtb24YDSABKAsyTS5Qb2tlbW9u",
            "R28uUm9ja2V0QVBJLkdlbmVyYXRlZENvZGUuTWFwT2JqZWN0c1Jlc3BvbnNl",
            "LlBheWxvYWQuTWFwUG9rZW1vblByb3RvEhoKEkNvb2xkb3duQ29tcGxldGVN",
            "cxgOIAEoAxIPCgdTcG9uc29yGA8gASgFEhUKDVJlbmRlcmluZ1R5cGUYECAB",
            "KAUabQoXUG9rZW1vblN1bW1hcnlGb3J0UHJvdG8SFQoNRm9ydFN1bW1hcnlJ",
            "ZBgBIAEoCRIWCg5MYXN0TW9kaWZpZWRNcxgCIAEoAxIQCghMYXRpdHVkZRgD",
            "IAEoARIRCglMb25naXR1ZGUYBCABKAEaPAoVQ2xpZW50U3Bhd25Qb2ludFBy",
            "b3RvEhAKCExhdGl0dWRlGAIgASgBEhEKCUxvbmdpdHVkZRgDIAEoARqnAgoQ",
            "V2lsZFBva2Vtb25Qcm90bxITCgtFbmNvdW50ZXJJZBgBIAEoBBIWCg5MYXN0",
            "TW9kaWZpZWRNcxgCIAEoAxIQCghMYXRpdHVkZRgDIAEoARIRCglMb25naXR1",
            "ZGUYBCABKAESFAoMU3Bhd25Qb2ludElkGAUgASgJEmcKB3Bva2Vtb24YByAB",
            "KAsyVi5Qb2tlbW9uR28uUm9ja2V0QVBJLkdlbmVyYXRlZENvZGUuTWFwT2Jq",
            "ZWN0c1Jlc3BvbnNlLlBheWxvYWQuV2lsZFBva2Vtb25Qcm90by5Qb2tlbW9u",
            "EhgKEFRpbWVUaWxsSGlkZGVuTXMYCyABKAUaKAoHUG9rZW1vbhIKCgJJZBgB",
            "IAEoBBIRCglQb2tlbW9uSWQYAiABKAUaWAoSTmVhcmJ5UG9rZW1vblByb3Rv",
            "EhUKDVBva2VkZXhOdW1iZXIYASABKAUSFgoORGlzdGFuY2VNZXRlcnMYAiAB",
            "KAISEwoLRW5jb3VudGVySWQYAyABKAQiziAKClBva2Vtb25JZHMSEQoNUE9L",
            "RU1PTl9VTlNFVBAAEhsKF1YwMDAxX1BPS0VNT05fQlVMQkFTQVVSEAESGQoV",
            "VjAwMDJfUE9LRU1PTl9JVllTQVVSEAISGgoWVjAwMDNfUE9LRU1PTl9WRU5V",
            "U0FVUhADEhwKGFYwMDA0X1BPS0VNT05fQ0hBUk1BTkRFUhAEEhwKGFYwMDA1",
            "X1BPS0VNT05fQ0hBUk1FTEVPThAFEhsKF1YwMDA2X1BPS0VNT05fQ0hBUkla",
            "QVJEEAYSGgoWVjAwMDdfUE9LRU1PTl9TUVVJUlRMRRAHEhsKF1YwMDA4X1BP",
            "S0VNT05fV0FSVE9SVExFEAgSGwoXVjAwMDlfUE9LRU1PTl9CTEFTVE9JU0UQ",
            "CRIaChZWMDAxMF9QT0tFTU9OX0NBVEVSUElFEAoSGQoVVjAwMTFfUE9LRU1P",
            "Tl9NRVRBUE9EEAsSHAoYVjAwMTJfUE9LRU1PTl9CVVRURVJGUkVFEAwSGAoU",
            "VjAwMTNfUE9LRU1PTl9XRUVETEUQDRIYChRWMDAxNF9QT0tFTU9OX0tBS1VO",
            "QRAOEhoKFlYwMDE1X1BPS0VNT05fQkVFRFJJTEwQDxIYChRWMDAxNl9QT0tF",
            "TU9OX1BJREdFWRAQEhsKF1YwMDE3X1BPS0VNT05fUElER0VPVFRPEBESGQoV",
            "VjAwMThfUE9LRU1PTl9QSURHRU9UEBISGQoVVjAwMTlfUE9LRU1PTl9SQVRU",
            "QVRBEBMSGgoWVjAwMjBfUE9LRU1PTl9SQVRJQ0FURRAUEhkKFVYwMDIxX1BP",
            "S0VNT05fU1BFQVJPVxAVEhgKFFYwMDIyX1BPS0VNT05fRkVBUk9XEBYSFwoT",
            "VjAwMjNfUE9LRU1PTl9FS0FOUxAXEhcKE1YwMDI0X1BPS0VNT05fQVJCT0sQ",
            "GBIZChVWMDAyNV9QT0tFTU9OX1BJS0FDSFUQGRIYChRWMDAyNl9QT0tFTU9O",
            "X1JBSUNIVRAaEhsKF1YwMDI3X1BPS0VNT05fU0FORFNIUkVXEBsSGwoXVjAw",
            "MjhfUE9LRU1PTl9TQU5EU0xBU0gQHBIZChVWMDAyOV9QT0tFTU9OX05JRE9S",
            "QU4QHRIaChZWMDAzMF9QT0tFTU9OX05JRE9SSU5BEB4SGwoXVjAwMzFfUE9L",
            "RU1PTl9OSURPUVVFRU4QHxIZChVWMDAzMl9QT0tFTU9OX05JRE9SQU4QIBIa",
            "ChZWMDAzM19QT0tFTU9OX05JRE9SSU5PECESGgoWVjAwMzRfUE9LRU1PTl9O",
            "SURPS0lORxAiEhoKFlYwMDM1X1BPS0VNT05fQ0xFRkFJUlkQIxIaChZWMDAz",
            "Nl9QT0tFTU9OX0NMRUZBQkxFECQSGAoUVjAwMzdfUE9LRU1PTl9WVUxQSVgQ",
            "JRIbChdWMDAzOF9QT0tFTU9OX05JTkVUQUxFUxAmEhwKGFYwMDM5X1BPS0VN",
            "T05fSklHR0xZUFVGRhAnEhwKGFYwMDQwX1BPS0VNT05fV0lHR0xZVFVGRhAo",
            "EhcKE1YwMDQxX1BPS0VNT05fWlVCQVQQKRIYChRWMDA0Ml9QT0tFTU9OX0dP",
            "TEJBVBAqEhgKFFYwMDQzX1BPS0VNT05fT0RESVNIECsSFwoTVjAwNDRfUE9L",
            "RU1PTl9HTE9PTRAsEhsKF1YwMDQ1X1BPS0VNT05fVklMRVBMVU1FEC0SFwoT",
            "VjAwNDZfUE9LRU1PTl9QQVJBUxAuEhoKFlYwMDQ3X1BPS0VNT05fUEFSQVNF",
            "Q1QQLxIZChVWMDA0OF9QT0tFTU9OX1ZFTk9OQVQQMBIaChZWMDA0OV9QT0tF",
            "TU9OX1ZFTk9NT1RIEDESGQoVVjAwNTBfUE9LRU1PTl9ESUdMRVRUEDISGQoV",
            "VjAwNTFfUE9LRU1PTl9EVUdUUklPEDMSGAoUVjAwNTJfUE9LRU1PTl9NRU9X",
            "VEgQNBIZChVWMDA1M19QT0tFTU9OX1BFUlNJQU4QNRIZChVWMDA1NF9QT0tF",
            "TU9OX1BTWURVQ0sQNhIZChVWMDA1NV9QT0tFTU9OX0dPTERVQ0sQNxIYChRW",
            "MDA1Nl9QT0tFTU9OX01BTktFWRA4EhoKFlYwMDU3X1BPS0VNT05fUFJJTUVB",
            "UEUQORIbChdWMDA1OF9QT0tFTU9OX0dST1dMSVRIRRA6EhoKFlYwMDU5X1BP",
            "S0VNT05fQVJDQU5JTkUQOxIZChVWMDA2MF9QT0tFTU9OX1BPTElXQUcQPBIb",
            "ChdWMDA2MV9QT0tFTU9OX1BPTElXSElSTBA9EhsKF1YwMDYyX1BPS0VNT05f",
            "UE9MSVdSQVRIED4SFgoSVjAwNjNfUE9LRU1PTl9BQlJBED8SGQoVVjAwNjRf",
            "UE9LRU1PTl9LQURBQlJBEEASGgoWVjAwNjVfUE9LRU1PTl9BTEFLQVpBTRBB",
            "EhgKFFYwMDY2X1BPS0VNT05fTUFDSE9QEEISGQoVVjAwNjdfUE9LRU1PTl9N",
            "QUNIT0tFEEMSGQoVVjAwNjhfUE9LRU1PTl9NQUNIQU1QEEQSHAoYVjAwNjlf",
            "UE9LRU1PTl9CRUxMU1BST1VUEEUSHAoYVjAwNzBfUE9LRU1PTl9XRUVQSU5C",
            "RUxMEEYSHAoYVjAwNzFfUE9LRU1PTl9WSUNUUkVFQkVMEEcSGwoXVjAwNzJf",
            "UE9LRU1PTl9URU5UQUNPT0wQSBIcChhWMDA3M19QT0tFTU9OX1RFTlRBQ1JV",
            "RUwQSRIZChVWMDA3NF9QT0tFTU9OX0dFT0RVREUQShIaChZWMDA3NV9QT0tF",
            "TU9OX0dSQVZFTEVSEEsSFwoTVjAwNzZfUE9LRU1PTl9HT0xFTRBMEhgKFFYw",
            "MDc3X1BPS0VNT05fUE9OWVRBEE0SGgoWVjAwNzhfUE9LRU1PTl9SQVBJREFT",
            "SBBOEhoKFlYwMDc5X1BPS0VNT05fU0xPV1BPS0UQTxIZChVWMDA4MF9QT0tF",
            "TU9OX1NMT1dCUk8QUBIbChdWMDA4MV9QT0tFTU9OX01BR05FTUlURRBREhoK",
            "FlYwMDgyX1BPS0VNT05fTUFHTkVUT04QUhIbChdWMDA4M19QT0tFTU9OX0ZB",
            "UkZFVENIRBBTEhcKE1YwMDg0X1BPS0VNT05fRE9EVU8QVBIYChRWMDA4NV9Q",
            "T0tFTU9OX0RPRFJJTxBVEhYKElYwMDg2X1BPS0VNT05fU0VFTBBWEhkKFVYw",
            "MDg3X1BPS0VNT05fREVXR09ORxBXEhgKFFYwMDg4X1BPS0VNT05fR1JJTUVS",
            "EFgSFQoRVjAwODlfUE9LRU1PTl9NVUsQWRIaChZWMDA5MF9QT0tFTU9OX1NI",
            "RUxMREVSEFoSGgoWVjAwOTFfUE9LRU1PTl9DTE9ZU1RFUhBbEhgKFFYwMDky",
            "X1BPS0VNT05fR0FTVExZEFwSGQoVVjAwOTNfUE9LRU1PTl9IQVVOVEVSEF0S",
            "GAoUVjAwOTRfUE9LRU1PTl9HRU5HQVIQXhIWChJWMDA5NV9QT0tFTU9OX09O",
            "SVgQXxIZChVWMDA5Nl9QT0tFTU9OX0RST1daRUUQYBIXChNWMDA5N19QT0tF",
            "TU9OX0hZUE5PEGESGAoUVjAwOThfUE9LRU1PTl9LUkFCQlkQYhIZChVWMDA5",
            "OV9QT0tFTU9OX0tJTkdMRVIQYxIZChVWMDEwMF9QT0tFTU9OX1ZPTFRPUkIQ",
            "ZBIbChdWMDEwMV9QT0tFTU9OX0VMRUNUUk9ERRBlEhsKF1YwMTAyX1BPS0VN",
            "T05fRVhFR0dDVVRFEGYSGwoXVjAxMDNfUE9LRU1PTl9FWEVHR1VUT1IQZxIY",
            "ChRWMDEwNF9QT0tFTU9OX0NVQk9ORRBoEhkKFVYwMTA1X1BPS0VNT05fTUFS",
            "T1dBSxBpEhsKF1YwMTA2X1BPS0VNT05fSElUTU9OTEVFEGoSHAoYVjAxMDdf",
            "UE9LRU1PTl9ISVRNT05DSEFOEGsSGwoXVjAxMDhfUE9LRU1PTl9MSUNLSVRV",
            "TkcQbBIZChVWMDEwOV9QT0tFTU9OX0tPRkZJTkcQbRIZChVWMDExMF9QT0tF",
            "TU9OX1dFRVpJTkcQbhIZChVWMDExMV9QT0tFTU9OX1JIWUhPUk4QbxIYChRW",
            "MDExMl9QT0tFTU9OX1JIWURPThBwEhkKFVYwMTEzX1BPS0VNT05fQ0hBTlNF",
            "WRBxEhkKFVYwMTE0X1BPS0VNT05fVEFOR0VMQRByEhwKGFYwMTE1X1BPS0VN",
            "T05fS0FOR0FTS0hBThBzEhgKFFYwMTE2X1BPS0VNT05fSE9SU0VBEHQSGAoU",
            "VjAxMTdfUE9LRU1PTl9TRUFEUkEQdRIZChVWMDExOF9QT0tFTU9OX0dPTERF",
            "RU4QdhIZChVWMDExOV9QT0tFTU9OX1NFQUtJTkcQdxIYChRWMDEyMF9QT0tF",
            "TU9OX1NUQVJZVRB4EhkKFVYwMTIxX1BPS0VNT05fU1RBUk1JRRB5EhkKFVYw",
            "MTIyX1BPS0VNT05fTVJfTUlNRRB6EhkKFVYwMTIzX1BPS0VNT05fU0NZVEhF",
            "UhB7EhYKElYwMTI0X1BPS0VNT05fSllOWBB8EhwKGFYwMTI1X1BPS0VNT05f",
            "RUxFQ1RBQlVaWhB9EhgKFFYwMTI2X1BPS0VNT05fTUFHTUFSEH4SGAoUVjAx",
            "MjdfUE9LRU1PTl9QSU5TSVIQfxIZChRWMDEyOF9QT0tFTU9OX1RBVVJPUxCA",
            "ARIbChZWMDEyOV9QT0tFTU9OX01BR0lLQVJQEIEBEhsKFlYwMTMwX1BPS0VN",
            "T05fR1lBUkFET1MQggESGQoUVjAxMzFfUE9LRU1PTl9MQVBSQVMQgwESGAoT",
            "VjAxMzJfUE9LRU1PTl9ESVRUTxCEARIYChNWMDEzM19QT0tFTU9OX0VFVkVF",
            "EIUBEhsKFlYwMTM0X1BPS0VNT05fVkFQT1JFT04QhgESGgoVVjAxMzVfUE9L",
            "RU1PTl9KT0xURU9OEIcBEhoKFVYwMTM2X1BPS0VNT05fRkxBUkVPThCIARIa",
            "ChVWMDEzN19QT0tFTU9OX1BPUllHT04QiQESGgoVVjAxMzhfUE9LRU1PTl9P",
            "TUFOWVRFEIoBEhoKFVYwMTM5X1BPS0VNT05fT01BU1RBUhCLARIZChRWMDE0",
            "MF9QT0tFTU9OX0tBQlVUTxCMARIbChZWMDE0MV9QT0tFTU9OX0tBQlVUT1BT",
            "EI0BEh0KGFYwMTQyX1BPS0VNT05fQUVST0RBQ1RZTBCOARIaChVWMDE0M19Q",
            "T0tFTU9OX1NOT1JMQVgQjwESGwoWVjAxNDRfUE9LRU1PTl9BUlRJQ1VOTxCQ",
            "ARIZChRWMDE0NV9QT0tFTU9OX1pBUERPUxCRARIaChVWMDE0Nl9QT0tFTU9O",
            "X01PTFRSRVMQkgESGgoVVjAxNDdfUE9LRU1PTl9EUkFUSU5JEJMBEhwKF1Yw",
            "MTQ4X1BPS0VNT05fRFJBR09OQUlSEJQBEhwKF1YwMTQ5X1BPS0VNT05fRFJB",
            "R09OSVRFEJUBEhkKFFYwMTUwX1BPS0VNT05fTUVXVFdPEJYBEhYKEVYwMTUx",
            "X1BPS0VNT05fTUVXEJcBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Parser, new[]{ "Unknown1", "Unknown2", "ApiUrl", "Unknown6", "Unknown7", "Payload", "ErrorMessage" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6.Parser, new[]{ "Unknown1", "Unknown2" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6.Types.Unknown2), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6.Types.Unknown2.Parser, new[]{ "Unknown1" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown7), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown7.Parser, new[]{ "Unknown71", "Unknown72", "Unknown73" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Parser, new[]{ "Profile", "Unknownnumber" }, null, new[]{ typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonIds) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientMapCell), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientMapCell.Parser, new[]{ "S2CellId", "AsOfTimeMs", "Fort", "SpawnPoint", "WildPokemon", "IsTruncatedList", "FortSummary", "DecimatedSpawnPoint", "MapPokemon", "NearbyPokemon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemon), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemon.Parser, new[]{ "UniqueId", "PokemonId", "Pokemon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto.Parser, new[]{ "SpawnpointId", "EncounterId", "PokedexTypeId", "ExpirationTimeMs", "Latitude", "Longitude" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonFortProto), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonFortProto.Parser, new[]{ "FortId", "LastModifiedMs", "Latitude", "Longitude", "Team", "GuardPokemonId", "GuardPokemonLevel", "Enabled", "FortType", "GymPoints", "IsInBattle", "ActivePokemon", "CooldownCompleteMs", "Sponsor", "RenderingType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonSummaryFortProto), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonSummaryFortProto.Parser, new[]{ "FortSummaryId", "LastModifiedMs", "Latitude", "Longitude" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto.Parser, new[]{ "Latitude", "Longitude" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto.Parser, new[]{ "EncounterId", "LastModifiedMs", "Latitude", "Longitude", "SpawnPointId", "Pokemon", "TimeTillHiddenMs" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto.Types.Pokemon), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto.Types.Pokemon.Parser, new[]{ "Id", "PokemonId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto), global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto.Parser, new[]{ "PokedexNumber", "DistanceMeters", "EncounterId" }, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MapObjectsResponse : pb::IMessage<MapObjectsResponse> {
    private static readonly pb::MessageParser<MapObjectsResponse> _parser = new pb::MessageParser<MapObjectsResponse>(() => new MapObjectsResponse());
    public static pb::MessageParser<MapObjectsResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponseReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MapObjectsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MapObjectsResponse(MapObjectsResponse other) : this() {
      unknown1_ = other.unknown1_;
      unknown2_ = other.unknown2_;
      apiUrl_ = other.apiUrl_;
      Unknown6 = other.unknown6_ != null ? other.Unknown6.Clone() : null;
      Unknown7 = other.unknown7_ != null ? other.Unknown7.Clone() : null;
      payload_ = other.payload_.Clone();
      errorMessage_ = other.errorMessage_;
    }

    public MapObjectsResponse Clone() {
      return new MapObjectsResponse(this);
    }

    /// <summary>Field number for the "unknown1" field.</summary>
    public const int Unknown1FieldNumber = 1;
    private int unknown1_;
    public int Unknown1 {
      get { return unknown1_; }
      set {
        unknown1_ = value;
      }
    }

    /// <summary>Field number for the "unknown2" field.</summary>
    public const int Unknown2FieldNumber = 2;
    private long unknown2_;
    public long Unknown2 {
      get { return unknown2_; }
      set {
        unknown2_ = value;
      }
    }

    /// <summary>Field number for the "api_url" field.</summary>
    public const int ApiUrlFieldNumber = 3;
    private string apiUrl_ = "";
    public string ApiUrl {
      get { return apiUrl_; }
      set {
        apiUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unknown6" field.</summary>
    public const int Unknown6FieldNumber = 6;
    private global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6 unknown6_;
    public global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6 Unknown6 {
      get { return unknown6_; }
      set {
        unknown6_ = value;
      }
    }

    /// <summary>Field number for the "unknown7" field.</summary>
    public const int Unknown7FieldNumber = 7;
    private global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown7 unknown7_;
    public global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown7 Unknown7 {
      get { return unknown7_; }
      set {
        unknown7_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 100;
    private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload> _repeated_payload_codec
        = pb::FieldCodec.ForMessage(802, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Parser);
    private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload> payload_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload>();
    public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload> Payload {
      get { return payload_; }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 101;
    private string errorMessage_ = "";
    /// <summary>
    /// Should be moved to an error-proto file if error is always 101 field
    /// </summary>
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MapObjectsResponse);
    }

    public bool Equals(MapObjectsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Unknown1 != other.Unknown1) return false;
      if (Unknown2 != other.Unknown2) return false;
      if (ApiUrl != other.ApiUrl) return false;
      if (!object.Equals(Unknown6, other.Unknown6)) return false;
      if (!object.Equals(Unknown7, other.Unknown7)) return false;
      if(!payload_.Equals(other.payload_)) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Unknown1 != 0) hash ^= Unknown1.GetHashCode();
      if (Unknown2 != 0L) hash ^= Unknown2.GetHashCode();
      if (ApiUrl.Length != 0) hash ^= ApiUrl.GetHashCode();
      if (unknown6_ != null) hash ^= Unknown6.GetHashCode();
      if (unknown7_ != null) hash ^= Unknown7.GetHashCode();
      hash ^= payload_.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Unknown1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Unknown1);
      }
      if (Unknown2 != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Unknown2);
      }
      if (ApiUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ApiUrl);
      }
      if (unknown6_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Unknown6);
      }
      if (unknown7_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Unknown7);
      }
      payload_.WriteTo(output, _repeated_payload_codec);
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(ErrorMessage);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Unknown1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown1);
      }
      if (Unknown2 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Unknown2);
      }
      if (ApiUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiUrl);
      }
      if (unknown6_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown6);
      }
      if (unknown7_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown7);
      }
      size += payload_.CalculateSize(_repeated_payload_codec);
      if (ErrorMessage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      return size;
    }

    public void MergeFrom(MapObjectsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Unknown1 != 0) {
        Unknown1 = other.Unknown1;
      }
      if (other.Unknown2 != 0L) {
        Unknown2 = other.Unknown2;
      }
      if (other.ApiUrl.Length != 0) {
        ApiUrl = other.ApiUrl;
      }
      if (other.unknown6_ != null) {
        if (unknown6_ == null) {
          unknown6_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6();
        }
        Unknown6.MergeFrom(other.Unknown6);
      }
      if (other.unknown7_ != null) {
        if (unknown7_ == null) {
          unknown7_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown7();
        }
        Unknown7.MergeFrom(other.Unknown7);
      }
      payload_.Add(other.payload_);
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Unknown1 = input.ReadInt32();
            break;
          }
          case 16: {
            Unknown2 = input.ReadInt64();
            break;
          }
          case 26: {
            ApiUrl = input.ReadString();
            break;
          }
          case 50: {
            if (unknown6_ == null) {
              unknown6_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6();
            }
            input.ReadMessage(unknown6_);
            break;
          }
          case 58: {
            if (unknown7_ == null) {
              unknown7_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown7();
            }
            input.ReadMessage(unknown7_);
            break;
          }
          case 802: {
            payload_.AddEntriesFrom(input, _repeated_payload_codec);
            break;
          }
          case 810: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MapObjectsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Unknown6 : pb::IMessage<Unknown6> {
        private static readonly pb::MessageParser<Unknown6> _parser = new pb::MessageParser<Unknown6>(() => new Unknown6());
        public static pb::MessageParser<Unknown6> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Unknown6() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Unknown6(Unknown6 other) : this() {
          unknown1_ = other.unknown1_;
          Unknown2 = other.unknown2_ != null ? other.Unknown2.Clone() : null;
        }

        public Unknown6 Clone() {
          return new Unknown6(this);
        }

        /// <summary>Field number for the "unknown1" field.</summary>
        public const int Unknown1FieldNumber = 1;
        private int unknown1_;
        public int Unknown1 {
          get { return unknown1_; }
          set {
            unknown1_ = value;
          }
        }

        /// <summary>Field number for the "unknown2" field.</summary>
        public const int Unknown2FieldNumber = 2;
        private global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6.Types.Unknown2 unknown2_;
        public global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6.Types.Unknown2 Unknown2 {
          get { return unknown2_; }
          set {
            unknown2_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Unknown6);
        }

        public bool Equals(Unknown6 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Unknown1 != other.Unknown1) return false;
          if (!object.Equals(Unknown2, other.Unknown2)) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Unknown1 != 0) hash ^= Unknown1.GetHashCode();
          if (unknown2_ != null) hash ^= Unknown2.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Unknown1 != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Unknown1);
          }
          if (unknown2_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Unknown2);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Unknown1 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown1);
          }
          if (unknown2_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown2);
          }
          return size;
        }

        public void MergeFrom(Unknown6 other) {
          if (other == null) {
            return;
          }
          if (other.Unknown1 != 0) {
            Unknown1 = other.Unknown1;
          }
          if (other.unknown2_ != null) {
            if (unknown2_ == null) {
              unknown2_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6.Types.Unknown2();
            }
            Unknown2.MergeFrom(other.Unknown2);
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                Unknown1 = input.ReadInt32();
                break;
              }
              case 18: {
                if (unknown2_ == null) {
                  unknown2_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6.Types.Unknown2();
                }
                input.ReadMessage(unknown2_);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Unknown6 message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class Unknown2 : pb::IMessage<Unknown2> {
            private static readonly pb::MessageParser<Unknown2> _parser = new pb::MessageParser<Unknown2>(() => new Unknown2());
            public static pb::MessageParser<Unknown2> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Unknown6.Descriptor.NestedTypes[0]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public Unknown2() {
              OnConstruction();
            }

            partial void OnConstruction();

            public Unknown2(Unknown2 other) : this() {
              unknown1_ = other.unknown1_;
            }

            public Unknown2 Clone() {
              return new Unknown2(this);
            }

            /// <summary>Field number for the "unknown1" field.</summary>
            public const int Unknown1FieldNumber = 1;
            private pb::ByteString unknown1_ = pb::ByteString.Empty;
            public pb::ByteString Unknown1 {
              get { return unknown1_; }
              set {
                unknown1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            public override bool Equals(object other) {
              return Equals(other as Unknown2);
            }

            public bool Equals(Unknown2 other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Unknown1 != other.Unknown1) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (Unknown1.Length != 0) hash ^= Unknown1.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (Unknown1.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(Unknown1);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (Unknown1.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown1);
              }
              return size;
            }

            public void MergeFrom(Unknown2 other) {
              if (other == null) {
                return;
              }
              if (other.Unknown1.Length != 0) {
                Unknown1 = other.Unknown1;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    Unknown1 = input.ReadBytes();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Unknown7 : pb::IMessage<Unknown7> {
        private static readonly pb::MessageParser<Unknown7> _parser = new pb::MessageParser<Unknown7>(() => new Unknown7());
        public static pb::MessageParser<Unknown7> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Descriptor.NestedTypes[1]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Unknown7() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Unknown7(Unknown7 other) : this() {
          unknown71_ = other.unknown71_;
          unknown72_ = other.unknown72_;
          unknown73_ = other.unknown73_;
        }

        public Unknown7 Clone() {
          return new Unknown7(this);
        }

        /// <summary>Field number for the "unknown71" field.</summary>
        public const int Unknown71FieldNumber = 1;
        private pb::ByteString unknown71_ = pb::ByteString.Empty;
        public pb::ByteString Unknown71 {
          get { return unknown71_; }
          set {
            unknown71_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "unknown72" field.</summary>
        public const int Unknown72FieldNumber = 2;
        private long unknown72_;
        public long Unknown72 {
          get { return unknown72_; }
          set {
            unknown72_ = value;
          }
        }

        /// <summary>Field number for the "unknown73" field.</summary>
        public const int Unknown73FieldNumber = 3;
        private pb::ByteString unknown73_ = pb::ByteString.Empty;
        public pb::ByteString Unknown73 {
          get { return unknown73_; }
          set {
            unknown73_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Unknown7);
        }

        public bool Equals(Unknown7 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Unknown71 != other.Unknown71) return false;
          if (Unknown72 != other.Unknown72) return false;
          if (Unknown73 != other.Unknown73) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Unknown71.Length != 0) hash ^= Unknown71.GetHashCode();
          if (Unknown72 != 0L) hash ^= Unknown72.GetHashCode();
          if (Unknown73.Length != 0) hash ^= Unknown73.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Unknown71.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Unknown71);
          }
          if (Unknown72 != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Unknown72);
          }
          if (Unknown73.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Unknown73);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Unknown71.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown71);
          }
          if (Unknown72 != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Unknown72);
          }
          if (Unknown73.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown73);
          }
          return size;
        }

        public void MergeFrom(Unknown7 other) {
          if (other == null) {
            return;
          }
          if (other.Unknown71.Length != 0) {
            Unknown71 = other.Unknown71;
          }
          if (other.Unknown72 != 0L) {
            Unknown72 = other.Unknown72;
          }
          if (other.Unknown73.Length != 0) {
            Unknown73 = other.Unknown73;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Unknown71 = input.ReadBytes();
                break;
              }
              case 16: {
                Unknown72 = input.ReadInt64();
                break;
              }
              case 26: {
                Unknown73 = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Payload : pb::IMessage<Payload> {
        private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
        public static pb::MessageParser<Payload> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Descriptor.NestedTypes[2]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Payload() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Payload(Payload other) : this() {
          profile_ = other.profile_.Clone();
          unknownnumber_ = other.unknownnumber_;
        }

        public Payload Clone() {
          return new Payload(this);
        }

        /// <summary>Field number for the "profile" field.</summary>
        public const int ProfileFieldNumber = 1;
        private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientMapCell> _repeated_profile_codec
            = pb::FieldCodec.ForMessage(10, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientMapCell.Parser);
        private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientMapCell> profile_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientMapCell>();
        public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientMapCell> Profile {
          get { return profile_; }
        }

        /// <summary>Field number for the "unknownnumber" field.</summary>
        public const int UnknownnumberFieldNumber = 2;
        private int unknownnumber_;
        public int Unknownnumber {
          get { return unknownnumber_; }
          set {
            unknownnumber_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Payload);
        }

        public bool Equals(Payload other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!profile_.Equals(other.profile_)) return false;
          if (Unknownnumber != other.Unknownnumber) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          hash ^= profile_.GetHashCode();
          if (Unknownnumber != 0) hash ^= Unknownnumber.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          profile_.WriteTo(output, _repeated_profile_codec);
          if (Unknownnumber != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Unknownnumber);
          }
        }

        public int CalculateSize() {
          int size = 0;
          size += profile_.CalculateSize(_repeated_profile_codec);
          if (Unknownnumber != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknownnumber);
          }
          return size;
        }

        public void MergeFrom(Payload other) {
          if (other == null) {
            return;
          }
          profile_.Add(other.profile_);
          if (other.Unknownnumber != 0) {
            Unknownnumber = other.Unknownnumber;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                profile_.AddEntriesFrom(input, _repeated_profile_codec);
                break;
              }
              case 16: {
                Unknownnumber = input.ReadInt32();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Payload message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          public enum PokemonIds {
            [pbr::OriginalName("POKEMON_UNSET")] PokemonUnset = 0,
            [pbr::OriginalName("V0001_POKEMON_BULBASAUR")] V0001PokemonBulbasaur = 1,
            [pbr::OriginalName("V0002_POKEMON_IVYSAUR")] V0002PokemonIvysaur = 2,
            [pbr::OriginalName("V0003_POKEMON_VENUSAUR")] V0003PokemonVenusaur = 3,
            [pbr::OriginalName("V0004_POKEMON_CHARMANDER")] V0004PokemonCharmander = 4,
            [pbr::OriginalName("V0005_POKEMON_CHARMELEON")] V0005PokemonCharmeleon = 5,
            [pbr::OriginalName("V0006_POKEMON_CHARIZARD")] V0006PokemonCharizard = 6,
            [pbr::OriginalName("V0007_POKEMON_SQUIRTLE")] V0007PokemonSquirtle = 7,
            [pbr::OriginalName("V0008_POKEMON_WARTORTLE")] V0008PokemonWartortle = 8,
            [pbr::OriginalName("V0009_POKEMON_BLASTOISE")] V0009PokemonBlastoise = 9,
            [pbr::OriginalName("V0010_POKEMON_CATERPIE")] V0010PokemonCaterpie = 10,
            [pbr::OriginalName("V0011_POKEMON_METAPOD")] V0011PokemonMetapod = 11,
            [pbr::OriginalName("V0012_POKEMON_BUTTERFREE")] V0012PokemonButterfree = 12,
            [pbr::OriginalName("V0013_POKEMON_WEEDLE")] V0013PokemonWeedle = 13,
            [pbr::OriginalName("V0014_POKEMON_KAKUNA")] V0014PokemonKakuna = 14,
            [pbr::OriginalName("V0015_POKEMON_BEEDRILL")] V0015PokemonBeedrill = 15,
            [pbr::OriginalName("V0016_POKEMON_PIDGEY")] V0016PokemonPidgey = 16,
            [pbr::OriginalName("V0017_POKEMON_PIDGEOTTO")] V0017PokemonPidgeotto = 17,
            [pbr::OriginalName("V0018_POKEMON_PIDGEOT")] V0018PokemonPidgeot = 18,
            [pbr::OriginalName("V0019_POKEMON_RATTATA")] V0019PokemonRattata = 19,
            [pbr::OriginalName("V0020_POKEMON_RATICATE")] V0020PokemonRaticate = 20,
            [pbr::OriginalName("V0021_POKEMON_SPEAROW")] V0021PokemonSpearow = 21,
            [pbr::OriginalName("V0022_POKEMON_FEAROW")] V0022PokemonFearow = 22,
            [pbr::OriginalName("V0023_POKEMON_EKANS")] V0023PokemonEkans = 23,
            [pbr::OriginalName("V0024_POKEMON_ARBOK")] V0024PokemonArbok = 24,
            [pbr::OriginalName("V0025_POKEMON_PIKACHU")] V0025PokemonPikachu = 25,
            [pbr::OriginalName("V0026_POKEMON_RAICHU")] V0026PokemonRaichu = 26,
            [pbr::OriginalName("V0027_POKEMON_SANDSHREW")] V0027PokemonSandshrew = 27,
            [pbr::OriginalName("V0028_POKEMON_SANDSLASH")] V0028PokemonSandslash = 28,
            [pbr::OriginalName("V0029_POKEMON_NIDORAN")] V0029PokemonNidoran = 29,
            [pbr::OriginalName("V0030_POKEMON_NIDORINA")] V0030PokemonNidorina = 30,
            [pbr::OriginalName("V0031_POKEMON_NIDOQUEEN")] V0031PokemonNidoqueen = 31,
            [pbr::OriginalName("V0032_POKEMON_NIDORAN")] V0032PokemonNidoran = 32,
            [pbr::OriginalName("V0033_POKEMON_NIDORINO")] V0033PokemonNidorino = 33,
            [pbr::OriginalName("V0034_POKEMON_NIDOKING")] V0034PokemonNidoking = 34,
            [pbr::OriginalName("V0035_POKEMON_CLEFAIRY")] V0035PokemonClefairy = 35,
            [pbr::OriginalName("V0036_POKEMON_CLEFABLE")] V0036PokemonClefable = 36,
            [pbr::OriginalName("V0037_POKEMON_VULPIX")] V0037PokemonVulpix = 37,
            [pbr::OriginalName("V0038_POKEMON_NINETALES")] V0038PokemonNinetales = 38,
            [pbr::OriginalName("V0039_POKEMON_JIGGLYPUFF")] V0039PokemonJigglypuff = 39,
            [pbr::OriginalName("V0040_POKEMON_WIGGLYTUFF")] V0040PokemonWigglytuff = 40,
            [pbr::OriginalName("V0041_POKEMON_ZUBAT")] V0041PokemonZubat = 41,
            [pbr::OriginalName("V0042_POKEMON_GOLBAT")] V0042PokemonGolbat = 42,
            [pbr::OriginalName("V0043_POKEMON_ODDISH")] V0043PokemonOddish = 43,
            [pbr::OriginalName("V0044_POKEMON_GLOOM")] V0044PokemonGloom = 44,
            [pbr::OriginalName("V0045_POKEMON_VILEPLUME")] V0045PokemonVileplume = 45,
            [pbr::OriginalName("V0046_POKEMON_PARAS")] V0046PokemonParas = 46,
            [pbr::OriginalName("V0047_POKEMON_PARASECT")] V0047PokemonParasect = 47,
            [pbr::OriginalName("V0048_POKEMON_VENONAT")] V0048PokemonVenonat = 48,
            [pbr::OriginalName("V0049_POKEMON_VENOMOTH")] V0049PokemonVenomoth = 49,
            [pbr::OriginalName("V0050_POKEMON_DIGLETT")] V0050PokemonDiglett = 50,
            [pbr::OriginalName("V0051_POKEMON_DUGTRIO")] V0051PokemonDugtrio = 51,
            [pbr::OriginalName("V0052_POKEMON_MEOWTH")] V0052PokemonMeowth = 52,
            [pbr::OriginalName("V0053_POKEMON_PERSIAN")] V0053PokemonPersian = 53,
            [pbr::OriginalName("V0054_POKEMON_PSYDUCK")] V0054PokemonPsyduck = 54,
            [pbr::OriginalName("V0055_POKEMON_GOLDUCK")] V0055PokemonGolduck = 55,
            [pbr::OriginalName("V0056_POKEMON_MANKEY")] V0056PokemonMankey = 56,
            [pbr::OriginalName("V0057_POKEMON_PRIMEAPE")] V0057PokemonPrimeape = 57,
            [pbr::OriginalName("V0058_POKEMON_GROWLITHE")] V0058PokemonGrowlithe = 58,
            [pbr::OriginalName("V0059_POKEMON_ARCANINE")] V0059PokemonArcanine = 59,
            [pbr::OriginalName("V0060_POKEMON_POLIWAG")] V0060PokemonPoliwag = 60,
            [pbr::OriginalName("V0061_POKEMON_POLIWHIRL")] V0061PokemonPoliwhirl = 61,
            [pbr::OriginalName("V0062_POKEMON_POLIWRATH")] V0062PokemonPoliwrath = 62,
            [pbr::OriginalName("V0063_POKEMON_ABRA")] V0063PokemonAbra = 63,
            [pbr::OriginalName("V0064_POKEMON_KADABRA")] V0064PokemonKadabra = 64,
            [pbr::OriginalName("V0065_POKEMON_ALAKAZAM")] V0065PokemonAlakazam = 65,
            [pbr::OriginalName("V0066_POKEMON_MACHOP")] V0066PokemonMachop = 66,
            [pbr::OriginalName("V0067_POKEMON_MACHOKE")] V0067PokemonMachoke = 67,
            [pbr::OriginalName("V0068_POKEMON_MACHAMP")] V0068PokemonMachamp = 68,
            [pbr::OriginalName("V0069_POKEMON_BELLSPROUT")] V0069PokemonBellsprout = 69,
            [pbr::OriginalName("V0070_POKEMON_WEEPINBELL")] V0070PokemonWeepinbell = 70,
            [pbr::OriginalName("V0071_POKEMON_VICTREEBEL")] V0071PokemonVictreebel = 71,
            [pbr::OriginalName("V0072_POKEMON_TENTACOOL")] V0072PokemonTentacool = 72,
            [pbr::OriginalName("V0073_POKEMON_TENTACRUEL")] V0073PokemonTentacruel = 73,
            [pbr::OriginalName("V0074_POKEMON_GEODUDE")] V0074PokemonGeodude = 74,
            [pbr::OriginalName("V0075_POKEMON_GRAVELER")] V0075PokemonGraveler = 75,
            [pbr::OriginalName("V0076_POKEMON_GOLEM")] V0076PokemonGolem = 76,
            [pbr::OriginalName("V0077_POKEMON_PONYTA")] V0077PokemonPonyta = 77,
            [pbr::OriginalName("V0078_POKEMON_RAPIDASH")] V0078PokemonRapidash = 78,
            [pbr::OriginalName("V0079_POKEMON_SLOWPOKE")] V0079PokemonSlowpoke = 79,
            [pbr::OriginalName("V0080_POKEMON_SLOWBRO")] V0080PokemonSlowbro = 80,
            [pbr::OriginalName("V0081_POKEMON_MAGNEMITE")] V0081PokemonMagnemite = 81,
            [pbr::OriginalName("V0082_POKEMON_MAGNETON")] V0082PokemonMagneton = 82,
            [pbr::OriginalName("V0083_POKEMON_FARFETCHD")] V0083PokemonFarfetchd = 83,
            [pbr::OriginalName("V0084_POKEMON_DODUO")] V0084PokemonDoduo = 84,
            [pbr::OriginalName("V0085_POKEMON_DODRIO")] V0085PokemonDodrio = 85,
            [pbr::OriginalName("V0086_POKEMON_SEEL")] V0086PokemonSeel = 86,
            [pbr::OriginalName("V0087_POKEMON_DEWGONG")] V0087PokemonDewgong = 87,
            [pbr::OriginalName("V0088_POKEMON_GRIMER")] V0088PokemonGrimer = 88,
            [pbr::OriginalName("V0089_POKEMON_MUK")] V0089PokemonMuk = 89,
            [pbr::OriginalName("V0090_POKEMON_SHELLDER")] V0090PokemonShellder = 90,
            [pbr::OriginalName("V0091_POKEMON_CLOYSTER")] V0091PokemonCloyster = 91,
            [pbr::OriginalName("V0092_POKEMON_GASTLY")] V0092PokemonGastly = 92,
            [pbr::OriginalName("V0093_POKEMON_HAUNTER")] V0093PokemonHaunter = 93,
            [pbr::OriginalName("V0094_POKEMON_GENGAR")] V0094PokemonGengar = 94,
            [pbr::OriginalName("V0095_POKEMON_ONIX")] V0095PokemonOnix = 95,
            [pbr::OriginalName("V0096_POKEMON_DROWZEE")] V0096PokemonDrowzee = 96,
            [pbr::OriginalName("V0097_POKEMON_HYPNO")] V0097PokemonHypno = 97,
            [pbr::OriginalName("V0098_POKEMON_KRABBY")] V0098PokemonKrabby = 98,
            [pbr::OriginalName("V0099_POKEMON_KINGLER")] V0099PokemonKingler = 99,
            [pbr::OriginalName("V0100_POKEMON_VOLTORB")] V0100PokemonVoltorb = 100,
            [pbr::OriginalName("V0101_POKEMON_ELECTRODE")] V0101PokemonElectrode = 101,
            [pbr::OriginalName("V0102_POKEMON_EXEGGCUTE")] V0102PokemonExeggcute = 102,
            [pbr::OriginalName("V0103_POKEMON_EXEGGUTOR")] V0103PokemonExeggutor = 103,
            [pbr::OriginalName("V0104_POKEMON_CUBONE")] V0104PokemonCubone = 104,
            [pbr::OriginalName("V0105_POKEMON_MAROWAK")] V0105PokemonMarowak = 105,
            [pbr::OriginalName("V0106_POKEMON_HITMONLEE")] V0106PokemonHitmonlee = 106,
            [pbr::OriginalName("V0107_POKEMON_HITMONCHAN")] V0107PokemonHitmonchan = 107,
            [pbr::OriginalName("V0108_POKEMON_LICKITUNG")] V0108PokemonLickitung = 108,
            [pbr::OriginalName("V0109_POKEMON_KOFFING")] V0109PokemonKoffing = 109,
            [pbr::OriginalName("V0110_POKEMON_WEEZING")] V0110PokemonWeezing = 110,
            [pbr::OriginalName("V0111_POKEMON_RHYHORN")] V0111PokemonRhyhorn = 111,
            [pbr::OriginalName("V0112_POKEMON_RHYDON")] V0112PokemonRhydon = 112,
            [pbr::OriginalName("V0113_POKEMON_CHANSEY")] V0113PokemonChansey = 113,
            [pbr::OriginalName("V0114_POKEMON_TANGELA")] V0114PokemonTangela = 114,
            [pbr::OriginalName("V0115_POKEMON_KANGASKHAN")] V0115PokemonKangaskhan = 115,
            [pbr::OriginalName("V0116_POKEMON_HORSEA")] V0116PokemonHorsea = 116,
            [pbr::OriginalName("V0117_POKEMON_SEADRA")] V0117PokemonSeadra = 117,
            [pbr::OriginalName("V0118_POKEMON_GOLDEEN")] V0118PokemonGoldeen = 118,
            [pbr::OriginalName("V0119_POKEMON_SEAKING")] V0119PokemonSeaking = 119,
            [pbr::OriginalName("V0120_POKEMON_STARYU")] V0120PokemonStaryu = 120,
            [pbr::OriginalName("V0121_POKEMON_STARMIE")] V0121PokemonStarmie = 121,
            [pbr::OriginalName("V0122_POKEMON_MR_MIME")] V0122PokemonMrMime = 122,
            [pbr::OriginalName("V0123_POKEMON_SCYTHER")] V0123PokemonScyther = 123,
            [pbr::OriginalName("V0124_POKEMON_JYNX")] V0124PokemonJynx = 124,
            [pbr::OriginalName("V0125_POKEMON_ELECTABUZZ")] V0125PokemonElectabuzz = 125,
            [pbr::OriginalName("V0126_POKEMON_MAGMAR")] V0126PokemonMagmar = 126,
            [pbr::OriginalName("V0127_POKEMON_PINSIR")] V0127PokemonPinsir = 127,
            [pbr::OriginalName("V0128_POKEMON_TAUROS")] V0128PokemonTauros = 128,
            [pbr::OriginalName("V0129_POKEMON_MAGIKARP")] V0129PokemonMagikarp = 129,
            [pbr::OriginalName("V0130_POKEMON_GYARADOS")] V0130PokemonGyarados = 130,
            [pbr::OriginalName("V0131_POKEMON_LAPRAS")] V0131PokemonLapras = 131,
            [pbr::OriginalName("V0132_POKEMON_DITTO")] V0132PokemonDitto = 132,
            [pbr::OriginalName("V0133_POKEMON_EEVEE")] V0133PokemonEevee = 133,
            [pbr::OriginalName("V0134_POKEMON_VAPOREON")] V0134PokemonVaporeon = 134,
            [pbr::OriginalName("V0135_POKEMON_JOLTEON")] V0135PokemonJolteon = 135,
            [pbr::OriginalName("V0136_POKEMON_FLAREON")] V0136PokemonFlareon = 136,
            [pbr::OriginalName("V0137_POKEMON_PORYGON")] V0137PokemonPorygon = 137,
            [pbr::OriginalName("V0138_POKEMON_OMANYTE")] V0138PokemonOmanyte = 138,
            [pbr::OriginalName("V0139_POKEMON_OMASTAR")] V0139PokemonOmastar = 139,
            [pbr::OriginalName("V0140_POKEMON_KABUTO")] V0140PokemonKabuto = 140,
            [pbr::OriginalName("V0141_POKEMON_KABUTOPS")] V0141PokemonKabutops = 141,
            [pbr::OriginalName("V0142_POKEMON_AERODACTYL")] V0142PokemonAerodactyl = 142,
            [pbr::OriginalName("V0143_POKEMON_SNORLAX")] V0143PokemonSnorlax = 143,
            [pbr::OriginalName("V0144_POKEMON_ARTICUNO")] V0144PokemonArticuno = 144,
            [pbr::OriginalName("V0145_POKEMON_ZAPDOS")] V0145PokemonZapdos = 145,
            [pbr::OriginalName("V0146_POKEMON_MOLTRES")] V0146PokemonMoltres = 146,
            [pbr::OriginalName("V0147_POKEMON_DRATINI")] V0147PokemonDratini = 147,
            [pbr::OriginalName("V0148_POKEMON_DRAGONAIR")] V0148PokemonDragonair = 148,
            [pbr::OriginalName("V0149_POKEMON_DRAGONITE")] V0149PokemonDragonite = 149,
            [pbr::OriginalName("V0150_POKEMON_MEWTWO")] V0150PokemonMewtwo = 150,
            [pbr::OriginalName("V0151_POKEMON_MEW")] V0151PokemonMew = 151,
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class ClientMapCell : pb::IMessage<ClientMapCell> {
            private static readonly pb::MessageParser<ClientMapCell> _parser = new pb::MessageParser<ClientMapCell>(() => new ClientMapCell());
            public static pb::MessageParser<ClientMapCell> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Descriptor.NestedTypes[0]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public ClientMapCell() {
              OnConstruction();
            }

            partial void OnConstruction();

            public ClientMapCell(ClientMapCell other) : this() {
              s2CellId_ = other.s2CellId_;
              asOfTimeMs_ = other.asOfTimeMs_;
              fort_ = other.fort_.Clone();
              spawnPoint_ = other.spawnPoint_.Clone();
              wildPokemon_ = other.wildPokemon_.Clone();
              isTruncatedList_ = other.isTruncatedList_;
              fortSummary_ = other.fortSummary_.Clone();
              decimatedSpawnPoint_ = other.decimatedSpawnPoint_.Clone();
              mapPokemon_ = other.mapPokemon_.Clone();
              nearbyPokemon_ = other.nearbyPokemon_.Clone();
            }

            public ClientMapCell Clone() {
              return new ClientMapCell(this);
            }

            /// <summary>Field number for the "S2CellId" field.</summary>
            public const int S2CellIdFieldNumber = 1;
            private ulong s2CellId_;
            public ulong S2CellId {
              get { return s2CellId_; }
              set {
                s2CellId_ = value;
              }
            }

            /// <summary>Field number for the "AsOfTimeMs" field.</summary>
            public const int AsOfTimeMsFieldNumber = 2;
            private long asOfTimeMs_;
            public long AsOfTimeMs {
              get { return asOfTimeMs_; }
              set {
                asOfTimeMs_ = value;
              }
            }

            /// <summary>Field number for the "Fort" field.</summary>
            public const int FortFieldNumber = 3;
            private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonFortProto> _repeated_fort_codec
                = pb::FieldCodec.ForMessage(26, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonFortProto.Parser);
            private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonFortProto> fort_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonFortProto>();
            public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonFortProto> Fort {
              get { return fort_; }
            }

            /// <summary>Field number for the "SpawnPoint" field.</summary>
            public const int SpawnPointFieldNumber = 4;
            private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto> _repeated_spawnPoint_codec
                = pb::FieldCodec.ForMessage(34, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto.Parser);
            private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto> spawnPoint_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto>();
            public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto> SpawnPoint {
              get { return spawnPoint_; }
            }

            /// <summary>Field number for the "WildPokemon" field.</summary>
            public const int WildPokemonFieldNumber = 5;
            private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto> _repeated_wildPokemon_codec
                = pb::FieldCodec.ForMessage(42, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto.Parser);
            private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto> wildPokemon_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto>();
            public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto> WildPokemon {
              get { return wildPokemon_; }
            }

            /// <summary>Field number for the "IsTruncatedList" field.</summary>
            public const int IsTruncatedListFieldNumber = 7;
            private bool isTruncatedList_;
            /// <summary>
            /// unknown DeletedObject = 6;
            /// </summary>
            public bool IsTruncatedList {
              get { return isTruncatedList_; }
              set {
                isTruncatedList_ = value;
              }
            }

            /// <summary>Field number for the "FortSummary" field.</summary>
            public const int FortSummaryFieldNumber = 8;
            private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonSummaryFortProto> _repeated_fortSummary_codec
                = pb::FieldCodec.ForMessage(66, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonSummaryFortProto.Parser);
            private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonSummaryFortProto> fortSummary_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonSummaryFortProto>();
            public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonSummaryFortProto> FortSummary {
              get { return fortSummary_; }
            }

            /// <summary>Field number for the "DecimatedSpawnPoint" field.</summary>
            public const int DecimatedSpawnPointFieldNumber = 9;
            private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto> _repeated_decimatedSpawnPoint_codec
                = pb::FieldCodec.ForMessage(74, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto.Parser);
            private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto> decimatedSpawnPoint_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto>();
            public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.ClientSpawnPointProto> DecimatedSpawnPoint {
              get { return decimatedSpawnPoint_; }
            }

            /// <summary>Field number for the "MapPokemon" field.</summary>
            public const int MapPokemonFieldNumber = 10;
            private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto> _repeated_mapPokemon_codec
                = pb::FieldCodec.ForMessage(82, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto.Parser);
            private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto> mapPokemon_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto>();
            public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto> MapPokemon {
              get { return mapPokemon_; }
            }

            /// <summary>Field number for the "NearbyPokemon" field.</summary>
            public const int NearbyPokemonFieldNumber = 11;
            private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto> _repeated_nearbyPokemon_codec
                = pb::FieldCodec.ForMessage(90, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto.Parser);
            private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto> nearbyPokemon_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto>();
            public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto> NearbyPokemon {
              get { return nearbyPokemon_; }
            }

            public override bool Equals(object other) {
              return Equals(other as ClientMapCell);
            }

            public bool Equals(ClientMapCell other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (S2CellId != other.S2CellId) return false;
              if (AsOfTimeMs != other.AsOfTimeMs) return false;
              if(!fort_.Equals(other.fort_)) return false;
              if(!spawnPoint_.Equals(other.spawnPoint_)) return false;
              if(!wildPokemon_.Equals(other.wildPokemon_)) return false;
              if (IsTruncatedList != other.IsTruncatedList) return false;
              if(!fortSummary_.Equals(other.fortSummary_)) return false;
              if(!decimatedSpawnPoint_.Equals(other.decimatedSpawnPoint_)) return false;
              if(!mapPokemon_.Equals(other.mapPokemon_)) return false;
              if(!nearbyPokemon_.Equals(other.nearbyPokemon_)) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (S2CellId != 0UL) hash ^= S2CellId.GetHashCode();
              if (AsOfTimeMs != 0L) hash ^= AsOfTimeMs.GetHashCode();
              hash ^= fort_.GetHashCode();
              hash ^= spawnPoint_.GetHashCode();
              hash ^= wildPokemon_.GetHashCode();
              if (IsTruncatedList != false) hash ^= IsTruncatedList.GetHashCode();
              hash ^= fortSummary_.GetHashCode();
              hash ^= decimatedSpawnPoint_.GetHashCode();
              hash ^= mapPokemon_.GetHashCode();
              hash ^= nearbyPokemon_.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (S2CellId != 0UL) {
                output.WriteRawTag(8);
                output.WriteUInt64(S2CellId);
              }
              if (AsOfTimeMs != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(AsOfTimeMs);
              }
              fort_.WriteTo(output, _repeated_fort_codec);
              spawnPoint_.WriteTo(output, _repeated_spawnPoint_codec);
              wildPokemon_.WriteTo(output, _repeated_wildPokemon_codec);
              if (IsTruncatedList != false) {
                output.WriteRawTag(56);
                output.WriteBool(IsTruncatedList);
              }
              fortSummary_.WriteTo(output, _repeated_fortSummary_codec);
              decimatedSpawnPoint_.WriteTo(output, _repeated_decimatedSpawnPoint_codec);
              mapPokemon_.WriteTo(output, _repeated_mapPokemon_codec);
              nearbyPokemon_.WriteTo(output, _repeated_nearbyPokemon_codec);
            }

            public int CalculateSize() {
              int size = 0;
              if (S2CellId != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(S2CellId);
              }
              if (AsOfTimeMs != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(AsOfTimeMs);
              }
              size += fort_.CalculateSize(_repeated_fort_codec);
              size += spawnPoint_.CalculateSize(_repeated_spawnPoint_codec);
              size += wildPokemon_.CalculateSize(_repeated_wildPokemon_codec);
              if (IsTruncatedList != false) {
                size += 1 + 1;
              }
              size += fortSummary_.CalculateSize(_repeated_fortSummary_codec);
              size += decimatedSpawnPoint_.CalculateSize(_repeated_decimatedSpawnPoint_codec);
              size += mapPokemon_.CalculateSize(_repeated_mapPokemon_codec);
              size += nearbyPokemon_.CalculateSize(_repeated_nearbyPokemon_codec);
              return size;
            }

            public void MergeFrom(ClientMapCell other) {
              if (other == null) {
                return;
              }
              if (other.S2CellId != 0UL) {
                S2CellId = other.S2CellId;
              }
              if (other.AsOfTimeMs != 0L) {
                AsOfTimeMs = other.AsOfTimeMs;
              }
              fort_.Add(other.fort_);
              spawnPoint_.Add(other.spawnPoint_);
              wildPokemon_.Add(other.wildPokemon_);
              if (other.IsTruncatedList != false) {
                IsTruncatedList = other.IsTruncatedList;
              }
              fortSummary_.Add(other.fortSummary_);
              decimatedSpawnPoint_.Add(other.decimatedSpawnPoint_);
              mapPokemon_.Add(other.mapPokemon_);
              nearbyPokemon_.Add(other.nearbyPokemon_);
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 8: {
                    S2CellId = input.ReadUInt64();
                    break;
                  }
                  case 16: {
                    AsOfTimeMs = input.ReadInt64();
                    break;
                  }
                  case 26: {
                    fort_.AddEntriesFrom(input, _repeated_fort_codec);
                    break;
                  }
                  case 34: {
                    spawnPoint_.AddEntriesFrom(input, _repeated_spawnPoint_codec);
                    break;
                  }
                  case 42: {
                    wildPokemon_.AddEntriesFrom(input, _repeated_wildPokemon_codec);
                    break;
                  }
                  case 56: {
                    IsTruncatedList = input.ReadBool();
                    break;
                  }
                  case 66: {
                    fortSummary_.AddEntriesFrom(input, _repeated_fortSummary_codec);
                    break;
                  }
                  case 74: {
                    decimatedSpawnPoint_.AddEntriesFrom(input, _repeated_decimatedSpawnPoint_codec);
                    break;
                  }
                  case 82: {
                    mapPokemon_.AddEntriesFrom(input, _repeated_mapPokemon_codec);
                    break;
                  }
                  case 90: {
                    nearbyPokemon_.AddEntriesFrom(input, _repeated_nearbyPokemon_codec);
                    break;
                  }
                }
              }
            }

          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class WildPokemon : pb::IMessage<WildPokemon> {
            private static readonly pb::MessageParser<WildPokemon> _parser = new pb::MessageParser<WildPokemon>(() => new WildPokemon());
            public static pb::MessageParser<WildPokemon> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Descriptor.NestedTypes[1]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public WildPokemon() {
              OnConstruction();
            }

            partial void OnConstruction();

            public WildPokemon(WildPokemon other) : this() {
              uniqueId_ = other.uniqueId_;
              pokemonId_ = other.pokemonId_;
              pokemon_ = other.pokemon_.Clone();
            }

            public WildPokemon Clone() {
              return new WildPokemon(this);
            }

            /// <summary>Field number for the "UniqueId" field.</summary>
            public const int UniqueIdFieldNumber = 1;
            private string uniqueId_ = "";
            public string UniqueId {
              get { return uniqueId_; }
              set {
                uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "PokemonId" field.</summary>
            public const int PokemonIdFieldNumber = 2;
            private string pokemonId_ = "";
            public string PokemonId {
              get { return pokemonId_; }
              set {
                pokemonId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "pokemon" field.</summary>
            public const int PokemonFieldNumber = 11;
            private static readonly pb::FieldCodec<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto> _repeated_pokemon_codec
                = pb::FieldCodec.ForMessage(90, global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto.Parser);
            private readonly pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto> pokemon_ = new pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto>();
            /// <summary>
            ///  int64 three = 3;
            ///  float four = 4;
            ///  int32 five = 5;
            ///  unknown six = 6;
            /// </summary>
            public pbc::RepeatedField<global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.NearbyPokemonProto> Pokemon {
              get { return pokemon_; }
            }

            public override bool Equals(object other) {
              return Equals(other as WildPokemon);
            }

            public bool Equals(WildPokemon other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (UniqueId != other.UniqueId) return false;
              if (PokemonId != other.PokemonId) return false;
              if(!pokemon_.Equals(other.pokemon_)) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
              if (PokemonId.Length != 0) hash ^= PokemonId.GetHashCode();
              hash ^= pokemon_.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (UniqueId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(UniqueId);
              }
              if (PokemonId.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(PokemonId);
              }
              pokemon_.WriteTo(output, _repeated_pokemon_codec);
            }

            public int CalculateSize() {
              int size = 0;
              if (UniqueId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
              }
              if (PokemonId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(PokemonId);
              }
              size += pokemon_.CalculateSize(_repeated_pokemon_codec);
              return size;
            }

            public void MergeFrom(WildPokemon other) {
              if (other == null) {
                return;
              }
              if (other.UniqueId.Length != 0) {
                UniqueId = other.UniqueId;
              }
              if (other.PokemonId.Length != 0) {
                PokemonId = other.PokemonId;
              }
              pokemon_.Add(other.pokemon_);
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    UniqueId = input.ReadString();
                    break;
                  }
                  case 18: {
                    PokemonId = input.ReadString();
                    break;
                  }
                  case 90: {
                    pokemon_.AddEntriesFrom(input, _repeated_pokemon_codec);
                    break;
                  }
                }
              }
            }

          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class MapPokemonProto : pb::IMessage<MapPokemonProto> {
            private static readonly pb::MessageParser<MapPokemonProto> _parser = new pb::MessageParser<MapPokemonProto>(() => new MapPokemonProto());
            public static pb::MessageParser<MapPokemonProto> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Descriptor.NestedTypes[2]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public MapPokemonProto() {
              OnConstruction();
            }

            partial void OnConstruction();

            public MapPokemonProto(MapPokemonProto other) : this() {
              spawnpointId_ = other.spawnpointId_;
              encounterId_ = other.encounterId_;
              pokedexTypeId_ = other.pokedexTypeId_;
              expirationTimeMs_ = other.expirationTimeMs_;
              latitude_ = other.latitude_;
              longitude_ = other.longitude_;
            }

            public MapPokemonProto Clone() {
              return new MapPokemonProto(this);
            }

            /// <summary>Field number for the "SpawnpointId" field.</summary>
            public const int SpawnpointIdFieldNumber = 1;
            private string spawnpointId_ = "";
            public string SpawnpointId {
              get { return spawnpointId_; }
              set {
                spawnpointId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "EncounterId" field.</summary>
            public const int EncounterIdFieldNumber = 2;
            private ulong encounterId_;
            public ulong EncounterId {
              get { return encounterId_; }
              set {
                encounterId_ = value;
              }
            }

            /// <summary>Field number for the "PokedexTypeId" field.</summary>
            public const int PokedexTypeIdFieldNumber = 3;
            private global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonIds pokedexTypeId_ = 0;
            public global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonIds PokedexTypeId {
              get { return pokedexTypeId_; }
              set {
                pokedexTypeId_ = value;
              }
            }

            /// <summary>Field number for the "ExpirationTimeMs" field.</summary>
            public const int ExpirationTimeMsFieldNumber = 4;
            private long expirationTimeMs_;
            public long ExpirationTimeMs {
              get { return expirationTimeMs_; }
              set {
                expirationTimeMs_ = value;
              }
            }

            /// <summary>Field number for the "Latitude" field.</summary>
            public const int LatitudeFieldNumber = 5;
            private double latitude_;
            public double Latitude {
              get { return latitude_; }
              set {
                latitude_ = value;
              }
            }

            /// <summary>Field number for the "Longitude" field.</summary>
            public const int LongitudeFieldNumber = 6;
            private double longitude_;
            public double Longitude {
              get { return longitude_; }
              set {
                longitude_ = value;
              }
            }

            public override bool Equals(object other) {
              return Equals(other as MapPokemonProto);
            }

            public bool Equals(MapPokemonProto other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (SpawnpointId != other.SpawnpointId) return false;
              if (EncounterId != other.EncounterId) return false;
              if (PokedexTypeId != other.PokedexTypeId) return false;
              if (ExpirationTimeMs != other.ExpirationTimeMs) return false;
              if (Latitude != other.Latitude) return false;
              if (Longitude != other.Longitude) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (SpawnpointId.Length != 0) hash ^= SpawnpointId.GetHashCode();
              if (EncounterId != 0UL) hash ^= EncounterId.GetHashCode();
              if (PokedexTypeId != 0) hash ^= PokedexTypeId.GetHashCode();
              if (ExpirationTimeMs != 0L) hash ^= ExpirationTimeMs.GetHashCode();
              if (Latitude != 0D) hash ^= Latitude.GetHashCode();
              if (Longitude != 0D) hash ^= Longitude.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (SpawnpointId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(SpawnpointId);
              }
              if (EncounterId != 0UL) {
                output.WriteRawTag(17);
                output.WriteFixed64(EncounterId);
              }
              if (PokedexTypeId != 0) {
                output.WriteRawTag(24);
                output.WriteEnum((int) PokedexTypeId);
              }
              if (ExpirationTimeMs != 0L) {
                output.WriteRawTag(32);
                output.WriteInt64(ExpirationTimeMs);
              }
              if (Latitude != 0D) {
                output.WriteRawTag(41);
                output.WriteDouble(Latitude);
              }
              if (Longitude != 0D) {
                output.WriteRawTag(49);
                output.WriteDouble(Longitude);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (SpawnpointId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SpawnpointId);
              }
              if (EncounterId != 0UL) {
                size += 1 + 8;
              }
              if (PokedexTypeId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PokedexTypeId);
              }
              if (ExpirationTimeMs != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTimeMs);
              }
              if (Latitude != 0D) {
                size += 1 + 8;
              }
              if (Longitude != 0D) {
                size += 1 + 8;
              }
              return size;
            }

            public void MergeFrom(MapPokemonProto other) {
              if (other == null) {
                return;
              }
              if (other.SpawnpointId.Length != 0) {
                SpawnpointId = other.SpawnpointId;
              }
              if (other.EncounterId != 0UL) {
                EncounterId = other.EncounterId;
              }
              if (other.PokedexTypeId != 0) {
                PokedexTypeId = other.PokedexTypeId;
              }
              if (other.ExpirationTimeMs != 0L) {
                ExpirationTimeMs = other.ExpirationTimeMs;
              }
              if (other.Latitude != 0D) {
                Latitude = other.Latitude;
              }
              if (other.Longitude != 0D) {
                Longitude = other.Longitude;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    SpawnpointId = input.ReadString();
                    break;
                  }
                  case 17: {
                    EncounterId = input.ReadFixed64();
                    break;
                  }
                  case 24: {
                    pokedexTypeId_ = (global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.PokemonIds) input.ReadEnum();
                    break;
                  }
                  case 32: {
                    ExpirationTimeMs = input.ReadInt64();
                    break;
                  }
                  case 41: {
                    Latitude = input.ReadDouble();
                    break;
                  }
                  case 49: {
                    Longitude = input.ReadDouble();
                    break;
                  }
                }
              }
            }

          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class PokemonFortProto : pb::IMessage<PokemonFortProto> {
            private static readonly pb::MessageParser<PokemonFortProto> _parser = new pb::MessageParser<PokemonFortProto>(() => new PokemonFortProto());
            public static pb::MessageParser<PokemonFortProto> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Descriptor.NestedTypes[3]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public PokemonFortProto() {
              OnConstruction();
            }

            partial void OnConstruction();

            public PokemonFortProto(PokemonFortProto other) : this() {
              fortId_ = other.fortId_;
              lastModifiedMs_ = other.lastModifiedMs_;
              latitude_ = other.latitude_;
              longitude_ = other.longitude_;
              team_ = other.team_;
              guardPokemonId_ = other.guardPokemonId_;
              guardPokemonLevel_ = other.guardPokemonLevel_;
              enabled_ = other.enabled_;
              fortType_ = other.fortType_;
              gymPoints_ = other.gymPoints_;
              isInBattle_ = other.isInBattle_;
              ActivePokemon = other.activePokemon_ != null ? other.ActivePokemon.Clone() : null;
              cooldownCompleteMs_ = other.cooldownCompleteMs_;
              sponsor_ = other.sponsor_;
              renderingType_ = other.renderingType_;
            }

            public PokemonFortProto Clone() {
              return new PokemonFortProto(this);
            }

            /// <summary>Field number for the "FortId" field.</summary>
            public const int FortIdFieldNumber = 1;
            private string fortId_ = "";
            public string FortId {
              get { return fortId_; }
              set {
                fortId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "LastModifiedMs" field.</summary>
            public const int LastModifiedMsFieldNumber = 2;
            private long lastModifiedMs_;
            public long LastModifiedMs {
              get { return lastModifiedMs_; }
              set {
                lastModifiedMs_ = value;
              }
            }

            /// <summary>Field number for the "Latitude" field.</summary>
            public const int LatitudeFieldNumber = 3;
            private double latitude_;
            public double Latitude {
              get { return latitude_; }
              set {
                latitude_ = value;
              }
            }

            /// <summary>Field number for the "Longitude" field.</summary>
            public const int LongitudeFieldNumber = 4;
            private double longitude_;
            public double Longitude {
              get { return longitude_; }
              set {
                longitude_ = value;
              }
            }

            /// <summary>Field number for the "Team" field.</summary>
            public const int TeamFieldNumber = 5;
            private int team_;
            public int Team {
              get { return team_; }
              set {
                team_ = value;
              }
            }

            /// <summary>Field number for the "GuardPokemonId" field.</summary>
            public const int GuardPokemonIdFieldNumber = 6;
            private int guardPokemonId_;
            public int GuardPokemonId {
              get { return guardPokemonId_; }
              set {
                guardPokemonId_ = value;
              }
            }

            /// <summary>Field number for the "GuardPokemonLevel" field.</summary>
            public const int GuardPokemonLevelFieldNumber = 7;
            private int guardPokemonLevel_;
            public int GuardPokemonLevel {
              get { return guardPokemonLevel_; }
              set {
                guardPokemonLevel_ = value;
              }
            }

            /// <summary>Field number for the "Enabled" field.</summary>
            public const int EnabledFieldNumber = 8;
            private bool enabled_;
            public bool Enabled {
              get { return enabled_; }
              set {
                enabled_ = value;
              }
            }

            /// <summary>Field number for the "FortType" field.</summary>
            public const int FortTypeFieldNumber = 9;
            private int fortType_;
            /// <summary>
            ///  ENUM.Holoholo.Rpc.FortType FortType = 9;
            /// </summary>
            public int FortType {
              get { return fortType_; }
              set {
                fortType_ = value;
              }
            }

            /// <summary>Field number for the "GymPoints" field.</summary>
            public const int GymPointsFieldNumber = 10;
            private long gymPoints_;
            public long GymPoints {
              get { return gymPoints_; }
              set {
                gymPoints_ = value;
              }
            }

            /// <summary>Field number for the "IsInBattle" field.</summary>
            public const int IsInBattleFieldNumber = 11;
            private bool isInBattle_;
            public bool IsInBattle {
              get { return isInBattle_; }
              set {
                isInBattle_ = value;
              }
            }

            /// <summary>Field number for the "ActivePokemon" field.</summary>
            public const int ActivePokemonFieldNumber = 13;
            private global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto activePokemon_;
            /// <summary>
            /// unknown ActiveFortModifier = 12;
            /// </summary>
            public global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto ActivePokemon {
              get { return activePokemon_; }
              set {
                activePokemon_ = value;
              }
            }

            /// <summary>Field number for the "CooldownCompleteMs" field.</summary>
            public const int CooldownCompleteMsFieldNumber = 14;
            private long cooldownCompleteMs_;
            public long CooldownCompleteMs {
              get { return cooldownCompleteMs_; }
              set {
                cooldownCompleteMs_ = value;
              }
            }

            /// <summary>Field number for the "Sponsor" field.</summary>
            public const int SponsorFieldNumber = 15;
            private int sponsor_;
            /// <summary>
            ///  ENUM.Holoholo.Rpc.Sponsor.Types.FortSponsor.Sponsor Sponsor = 15;
            /// </summary>
            public int Sponsor {
              get { return sponsor_; }
              set {
                sponsor_ = value;
              }
            }

            /// <summary>Field number for the "RenderingType" field.</summary>
            public const int RenderingTypeFieldNumber = 16;
            private int renderingType_;
            /// <summary>
            ///  ENUM.Holoholo.Rpc.RenderingType.Types.FortRenderingType.RenderingType RenderingType = 16;
            /// </summary>
            public int RenderingType {
              get { return renderingType_; }
              set {
                renderingType_ = value;
              }
            }

            public override bool Equals(object other) {
              return Equals(other as PokemonFortProto);
            }

            public bool Equals(PokemonFortProto other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FortId != other.FortId) return false;
              if (LastModifiedMs != other.LastModifiedMs) return false;
              if (Latitude != other.Latitude) return false;
              if (Longitude != other.Longitude) return false;
              if (Team != other.Team) return false;
              if (GuardPokemonId != other.GuardPokemonId) return false;
              if (GuardPokemonLevel != other.GuardPokemonLevel) return false;
              if (Enabled != other.Enabled) return false;
              if (FortType != other.FortType) return false;
              if (GymPoints != other.GymPoints) return false;
              if (IsInBattle != other.IsInBattle) return false;
              if (!object.Equals(ActivePokemon, other.ActivePokemon)) return false;
              if (CooldownCompleteMs != other.CooldownCompleteMs) return false;
              if (Sponsor != other.Sponsor) return false;
              if (RenderingType != other.RenderingType) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (FortId.Length != 0) hash ^= FortId.GetHashCode();
              if (LastModifiedMs != 0L) hash ^= LastModifiedMs.GetHashCode();
              if (Latitude != 0D) hash ^= Latitude.GetHashCode();
              if (Longitude != 0D) hash ^= Longitude.GetHashCode();
              if (Team != 0) hash ^= Team.GetHashCode();
              if (GuardPokemonId != 0) hash ^= GuardPokemonId.GetHashCode();
              if (GuardPokemonLevel != 0) hash ^= GuardPokemonLevel.GetHashCode();
              if (Enabled != false) hash ^= Enabled.GetHashCode();
              if (FortType != 0) hash ^= FortType.GetHashCode();
              if (GymPoints != 0L) hash ^= GymPoints.GetHashCode();
              if (IsInBattle != false) hash ^= IsInBattle.GetHashCode();
              if (activePokemon_ != null) hash ^= ActivePokemon.GetHashCode();
              if (CooldownCompleteMs != 0L) hash ^= CooldownCompleteMs.GetHashCode();
              if (Sponsor != 0) hash ^= Sponsor.GetHashCode();
              if (RenderingType != 0) hash ^= RenderingType.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (FortId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(FortId);
              }
              if (LastModifiedMs != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastModifiedMs);
              }
              if (Latitude != 0D) {
                output.WriteRawTag(25);
                output.WriteDouble(Latitude);
              }
              if (Longitude != 0D) {
                output.WriteRawTag(33);
                output.WriteDouble(Longitude);
              }
              if (Team != 0) {
                output.WriteRawTag(40);
                output.WriteInt32(Team);
              }
              if (GuardPokemonId != 0) {
                output.WriteRawTag(48);
                output.WriteInt32(GuardPokemonId);
              }
              if (GuardPokemonLevel != 0) {
                output.WriteRawTag(56);
                output.WriteInt32(GuardPokemonLevel);
              }
              if (Enabled != false) {
                output.WriteRawTag(64);
                output.WriteBool(Enabled);
              }
              if (FortType != 0) {
                output.WriteRawTag(72);
                output.WriteInt32(FortType);
              }
              if (GymPoints != 0L) {
                output.WriteRawTag(80);
                output.WriteInt64(GymPoints);
              }
              if (IsInBattle != false) {
                output.WriteRawTag(88);
                output.WriteBool(IsInBattle);
              }
              if (activePokemon_ != null) {
                output.WriteRawTag(106);
                output.WriteMessage(ActivePokemon);
              }
              if (CooldownCompleteMs != 0L) {
                output.WriteRawTag(112);
                output.WriteInt64(CooldownCompleteMs);
              }
              if (Sponsor != 0) {
                output.WriteRawTag(120);
                output.WriteInt32(Sponsor);
              }
              if (RenderingType != 0) {
                output.WriteRawTag(128, 1);
                output.WriteInt32(RenderingType);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (FortId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(FortId);
              }
              if (LastModifiedMs != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastModifiedMs);
              }
              if (Latitude != 0D) {
                size += 1 + 8;
              }
              if (Longitude != 0D) {
                size += 1 + 8;
              }
              if (Team != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Team);
              }
              if (GuardPokemonId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuardPokemonId);
              }
              if (GuardPokemonLevel != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuardPokemonLevel);
              }
              if (Enabled != false) {
                size += 1 + 1;
              }
              if (FortType != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FortType);
              }
              if (GymPoints != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(GymPoints);
              }
              if (IsInBattle != false) {
                size += 1 + 1;
              }
              if (activePokemon_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivePokemon);
              }
              if (CooldownCompleteMs != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(CooldownCompleteMs);
              }
              if (Sponsor != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sponsor);
              }
              if (RenderingType != 0) {
                size += 2 + pb::CodedOutputStream.ComputeInt32Size(RenderingType);
              }
              return size;
            }

            public void MergeFrom(PokemonFortProto other) {
              if (other == null) {
                return;
              }
              if (other.FortId.Length != 0) {
                FortId = other.FortId;
              }
              if (other.LastModifiedMs != 0L) {
                LastModifiedMs = other.LastModifiedMs;
              }
              if (other.Latitude != 0D) {
                Latitude = other.Latitude;
              }
              if (other.Longitude != 0D) {
                Longitude = other.Longitude;
              }
              if (other.Team != 0) {
                Team = other.Team;
              }
              if (other.GuardPokemonId != 0) {
                GuardPokemonId = other.GuardPokemonId;
              }
              if (other.GuardPokemonLevel != 0) {
                GuardPokemonLevel = other.GuardPokemonLevel;
              }
              if (other.Enabled != false) {
                Enabled = other.Enabled;
              }
              if (other.FortType != 0) {
                FortType = other.FortType;
              }
              if (other.GymPoints != 0L) {
                GymPoints = other.GymPoints;
              }
              if (other.IsInBattle != false) {
                IsInBattle = other.IsInBattle;
              }
              if (other.activePokemon_ != null) {
                if (activePokemon_ == null) {
                  activePokemon_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto();
                }
                ActivePokemon.MergeFrom(other.ActivePokemon);
              }
              if (other.CooldownCompleteMs != 0L) {
                CooldownCompleteMs = other.CooldownCompleteMs;
              }
              if (other.Sponsor != 0) {
                Sponsor = other.Sponsor;
              }
              if (other.RenderingType != 0) {
                RenderingType = other.RenderingType;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    FortId = input.ReadString();
                    break;
                  }
                  case 16: {
                    LastModifiedMs = input.ReadInt64();
                    break;
                  }
                  case 25: {
                    Latitude = input.ReadDouble();
                    break;
                  }
                  case 33: {
                    Longitude = input.ReadDouble();
                    break;
                  }
                  case 40: {
                    Team = input.ReadInt32();
                    break;
                  }
                  case 48: {
                    GuardPokemonId = input.ReadInt32();
                    break;
                  }
                  case 56: {
                    GuardPokemonLevel = input.ReadInt32();
                    break;
                  }
                  case 64: {
                    Enabled = input.ReadBool();
                    break;
                  }
                  case 72: {
                    FortType = input.ReadInt32();
                    break;
                  }
                  case 80: {
                    GymPoints = input.ReadInt64();
                    break;
                  }
                  case 88: {
                    IsInBattle = input.ReadBool();
                    break;
                  }
                  case 106: {
                    if (activePokemon_ == null) {
                      activePokemon_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.MapPokemonProto();
                    }
                    input.ReadMessage(activePokemon_);
                    break;
                  }
                  case 112: {
                    CooldownCompleteMs = input.ReadInt64();
                    break;
                  }
                  case 120: {
                    Sponsor = input.ReadInt32();
                    break;
                  }
                  case 128: {
                    RenderingType = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class PokemonSummaryFortProto : pb::IMessage<PokemonSummaryFortProto> {
            private static readonly pb::MessageParser<PokemonSummaryFortProto> _parser = new pb::MessageParser<PokemonSummaryFortProto>(() => new PokemonSummaryFortProto());
            public static pb::MessageParser<PokemonSummaryFortProto> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Descriptor.NestedTypes[4]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public PokemonSummaryFortProto() {
              OnConstruction();
            }

            partial void OnConstruction();

            public PokemonSummaryFortProto(PokemonSummaryFortProto other) : this() {
              fortSummaryId_ = other.fortSummaryId_;
              lastModifiedMs_ = other.lastModifiedMs_;
              latitude_ = other.latitude_;
              longitude_ = other.longitude_;
            }

            public PokemonSummaryFortProto Clone() {
              return new PokemonSummaryFortProto(this);
            }

            /// <summary>Field number for the "FortSummaryId" field.</summary>
            public const int FortSummaryIdFieldNumber = 1;
            private string fortSummaryId_ = "";
            public string FortSummaryId {
              get { return fortSummaryId_; }
              set {
                fortSummaryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "LastModifiedMs" field.</summary>
            public const int LastModifiedMsFieldNumber = 2;
            private long lastModifiedMs_;
            public long LastModifiedMs {
              get { return lastModifiedMs_; }
              set {
                lastModifiedMs_ = value;
              }
            }

            /// <summary>Field number for the "Latitude" field.</summary>
            public const int LatitudeFieldNumber = 3;
            private double latitude_;
            public double Latitude {
              get { return latitude_; }
              set {
                latitude_ = value;
              }
            }

            /// <summary>Field number for the "Longitude" field.</summary>
            public const int LongitudeFieldNumber = 4;
            private double longitude_;
            public double Longitude {
              get { return longitude_; }
              set {
                longitude_ = value;
              }
            }

            public override bool Equals(object other) {
              return Equals(other as PokemonSummaryFortProto);
            }

            public bool Equals(PokemonSummaryFortProto other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FortSummaryId != other.FortSummaryId) return false;
              if (LastModifiedMs != other.LastModifiedMs) return false;
              if (Latitude != other.Latitude) return false;
              if (Longitude != other.Longitude) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (FortSummaryId.Length != 0) hash ^= FortSummaryId.GetHashCode();
              if (LastModifiedMs != 0L) hash ^= LastModifiedMs.GetHashCode();
              if (Latitude != 0D) hash ^= Latitude.GetHashCode();
              if (Longitude != 0D) hash ^= Longitude.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (FortSummaryId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(FortSummaryId);
              }
              if (LastModifiedMs != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastModifiedMs);
              }
              if (Latitude != 0D) {
                output.WriteRawTag(25);
                output.WriteDouble(Latitude);
              }
              if (Longitude != 0D) {
                output.WriteRawTag(33);
                output.WriteDouble(Longitude);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (FortSummaryId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(FortSummaryId);
              }
              if (LastModifiedMs != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastModifiedMs);
              }
              if (Latitude != 0D) {
                size += 1 + 8;
              }
              if (Longitude != 0D) {
                size += 1 + 8;
              }
              return size;
            }

            public void MergeFrom(PokemonSummaryFortProto other) {
              if (other == null) {
                return;
              }
              if (other.FortSummaryId.Length != 0) {
                FortSummaryId = other.FortSummaryId;
              }
              if (other.LastModifiedMs != 0L) {
                LastModifiedMs = other.LastModifiedMs;
              }
              if (other.Latitude != 0D) {
                Latitude = other.Latitude;
              }
              if (other.Longitude != 0D) {
                Longitude = other.Longitude;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    FortSummaryId = input.ReadString();
                    break;
                  }
                  case 16: {
                    LastModifiedMs = input.ReadInt64();
                    break;
                  }
                  case 25: {
                    Latitude = input.ReadDouble();
                    break;
                  }
                  case 33: {
                    Longitude = input.ReadDouble();
                    break;
                  }
                }
              }
            }

          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class ClientSpawnPointProto : pb::IMessage<ClientSpawnPointProto> {
            private static readonly pb::MessageParser<ClientSpawnPointProto> _parser = new pb::MessageParser<ClientSpawnPointProto>(() => new ClientSpawnPointProto());
            public static pb::MessageParser<ClientSpawnPointProto> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Descriptor.NestedTypes[5]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public ClientSpawnPointProto() {
              OnConstruction();
            }

            partial void OnConstruction();

            public ClientSpawnPointProto(ClientSpawnPointProto other) : this() {
              latitude_ = other.latitude_;
              longitude_ = other.longitude_;
            }

            public ClientSpawnPointProto Clone() {
              return new ClientSpawnPointProto(this);
            }

            /// <summary>Field number for the "Latitude" field.</summary>
            public const int LatitudeFieldNumber = 2;
            private double latitude_;
            public double Latitude {
              get { return latitude_; }
              set {
                latitude_ = value;
              }
            }

            /// <summary>Field number for the "Longitude" field.</summary>
            public const int LongitudeFieldNumber = 3;
            private double longitude_;
            public double Longitude {
              get { return longitude_; }
              set {
                longitude_ = value;
              }
            }

            public override bool Equals(object other) {
              return Equals(other as ClientSpawnPointProto);
            }

            public bool Equals(ClientSpawnPointProto other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Latitude != other.Latitude) return false;
              if (Longitude != other.Longitude) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (Latitude != 0D) hash ^= Latitude.GetHashCode();
              if (Longitude != 0D) hash ^= Longitude.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (Latitude != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(Latitude);
              }
              if (Longitude != 0D) {
                output.WriteRawTag(25);
                output.WriteDouble(Longitude);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (Latitude != 0D) {
                size += 1 + 8;
              }
              if (Longitude != 0D) {
                size += 1 + 8;
              }
              return size;
            }

            public void MergeFrom(ClientSpawnPointProto other) {
              if (other == null) {
                return;
              }
              if (other.Latitude != 0D) {
                Latitude = other.Latitude;
              }
              if (other.Longitude != 0D) {
                Longitude = other.Longitude;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 17: {
                    Latitude = input.ReadDouble();
                    break;
                  }
                  case 25: {
                    Longitude = input.ReadDouble();
                    break;
                  }
                }
              }
            }

          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class WildPokemonProto : pb::IMessage<WildPokemonProto> {
            private static readonly pb::MessageParser<WildPokemonProto> _parser = new pb::MessageParser<WildPokemonProto>(() => new WildPokemonProto());
            public static pb::MessageParser<WildPokemonProto> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Descriptor.NestedTypes[6]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public WildPokemonProto() {
              OnConstruction();
            }

            partial void OnConstruction();

            public WildPokemonProto(WildPokemonProto other) : this() {
              encounterId_ = other.encounterId_;
              lastModifiedMs_ = other.lastModifiedMs_;
              latitude_ = other.latitude_;
              longitude_ = other.longitude_;
              spawnPointId_ = other.spawnPointId_;
              Pokemon = other.pokemon_ != null ? other.Pokemon.Clone() : null;
              timeTillHiddenMs_ = other.timeTillHiddenMs_;
            }

            public WildPokemonProto Clone() {
              return new WildPokemonProto(this);
            }

            /// <summary>Field number for the "EncounterId" field.</summary>
            public const int EncounterIdFieldNumber = 1;
            private ulong encounterId_;
            public ulong EncounterId {
              get { return encounterId_; }
              set {
                encounterId_ = value;
              }
            }

            /// <summary>Field number for the "LastModifiedMs" field.</summary>
            public const int LastModifiedMsFieldNumber = 2;
            private long lastModifiedMs_;
            public long LastModifiedMs {
              get { return lastModifiedMs_; }
              set {
                lastModifiedMs_ = value;
              }
            }

            /// <summary>Field number for the "Latitude" field.</summary>
            public const int LatitudeFieldNumber = 3;
            private double latitude_;
            public double Latitude {
              get { return latitude_; }
              set {
                latitude_ = value;
              }
            }

            /// <summary>Field number for the "Longitude" field.</summary>
            public const int LongitudeFieldNumber = 4;
            private double longitude_;
            public double Longitude {
              get { return longitude_; }
              set {
                longitude_ = value;
              }
            }

            /// <summary>Field number for the "SpawnPointId" field.</summary>
            public const int SpawnPointIdFieldNumber = 5;
            private string spawnPointId_ = "";
            public string SpawnPointId {
              get { return spawnPointId_; }
              set {
                spawnPointId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "pokemon" field.</summary>
            public const int PokemonFieldNumber = 7;
            private global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto.Types.Pokemon pokemon_;
            public global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto.Types.Pokemon Pokemon {
              get { return pokemon_; }
              set {
                pokemon_ = value;
              }
            }

            /// <summary>Field number for the "TimeTillHiddenMs" field.</summary>
            public const int TimeTillHiddenMsFieldNumber = 11;
            private int timeTillHiddenMs_;
            public int TimeTillHiddenMs {
              get { return timeTillHiddenMs_; }
              set {
                timeTillHiddenMs_ = value;
              }
            }

            public override bool Equals(object other) {
              return Equals(other as WildPokemonProto);
            }

            public bool Equals(WildPokemonProto other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (EncounterId != other.EncounterId) return false;
              if (LastModifiedMs != other.LastModifiedMs) return false;
              if (Latitude != other.Latitude) return false;
              if (Longitude != other.Longitude) return false;
              if (SpawnPointId != other.SpawnPointId) return false;
              if (!object.Equals(Pokemon, other.Pokemon)) return false;
              if (TimeTillHiddenMs != other.TimeTillHiddenMs) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (EncounterId != 0UL) hash ^= EncounterId.GetHashCode();
              if (LastModifiedMs != 0L) hash ^= LastModifiedMs.GetHashCode();
              if (Latitude != 0D) hash ^= Latitude.GetHashCode();
              if (Longitude != 0D) hash ^= Longitude.GetHashCode();
              if (SpawnPointId.Length != 0) hash ^= SpawnPointId.GetHashCode();
              if (pokemon_ != null) hash ^= Pokemon.GetHashCode();
              if (TimeTillHiddenMs != 0) hash ^= TimeTillHiddenMs.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (EncounterId != 0UL) {
                output.WriteRawTag(8);
                output.WriteUInt64(EncounterId);
              }
              if (LastModifiedMs != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(LastModifiedMs);
              }
              if (Latitude != 0D) {
                output.WriteRawTag(25);
                output.WriteDouble(Latitude);
              }
              if (Longitude != 0D) {
                output.WriteRawTag(33);
                output.WriteDouble(Longitude);
              }
              if (SpawnPointId.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(SpawnPointId);
              }
              if (pokemon_ != null) {
                output.WriteRawTag(58);
                output.WriteMessage(Pokemon);
              }
              if (TimeTillHiddenMs != 0) {
                output.WriteRawTag(88);
                output.WriteInt32(TimeTillHiddenMs);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (EncounterId != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EncounterId);
              }
              if (LastModifiedMs != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastModifiedMs);
              }
              if (Latitude != 0D) {
                size += 1 + 8;
              }
              if (Longitude != 0D) {
                size += 1 + 8;
              }
              if (SpawnPointId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(SpawnPointId);
              }
              if (pokemon_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pokemon);
              }
              if (TimeTillHiddenMs != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeTillHiddenMs);
              }
              return size;
            }

            public void MergeFrom(WildPokemonProto other) {
              if (other == null) {
                return;
              }
              if (other.EncounterId != 0UL) {
                EncounterId = other.EncounterId;
              }
              if (other.LastModifiedMs != 0L) {
                LastModifiedMs = other.LastModifiedMs;
              }
              if (other.Latitude != 0D) {
                Latitude = other.Latitude;
              }
              if (other.Longitude != 0D) {
                Longitude = other.Longitude;
              }
              if (other.SpawnPointId.Length != 0) {
                SpawnPointId = other.SpawnPointId;
              }
              if (other.pokemon_ != null) {
                if (pokemon_ == null) {
                  pokemon_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto.Types.Pokemon();
                }
                Pokemon.MergeFrom(other.Pokemon);
              }
              if (other.TimeTillHiddenMs != 0) {
                TimeTillHiddenMs = other.TimeTillHiddenMs;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 8: {
                    EncounterId = input.ReadUInt64();
                    break;
                  }
                  case 16: {
                    LastModifiedMs = input.ReadInt64();
                    break;
                  }
                  case 25: {
                    Latitude = input.ReadDouble();
                    break;
                  }
                  case 33: {
                    Longitude = input.ReadDouble();
                    break;
                  }
                  case 42: {
                    SpawnPointId = input.ReadString();
                    break;
                  }
                  case 58: {
                    if (pokemon_ == null) {
                      pokemon_ = new global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto.Types.Pokemon();
                    }
                    input.ReadMessage(pokemon_);
                    break;
                  }
                  case 88: {
                    TimeTillHiddenMs = input.ReadInt32();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the WildPokemonProto message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static partial class Types {
              [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
              public sealed partial class Pokemon : pb::IMessage<Pokemon> {
                private static readonly pb::MessageParser<Pokemon> _parser = new pb::MessageParser<Pokemon>(() => new Pokemon());
                public static pb::MessageParser<Pokemon> Parser { get { return _parser; } }

                public static pbr::MessageDescriptor Descriptor {
                  get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Types.WildPokemonProto.Descriptor.NestedTypes[0]; }
                }

                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                public Pokemon() {
                  OnConstruction();
                }

                partial void OnConstruction();

                public Pokemon(Pokemon other) : this() {
                  id_ = other.id_;
                  pokemonId_ = other.pokemonId_;
                }

                public Pokemon Clone() {
                  return new Pokemon(this);
                }

                /// <summary>Field number for the "Id" field.</summary>
                public const int IdFieldNumber = 1;
                private ulong id_;
                public ulong Id {
                  get { return id_; }
                  set {
                    id_ = value;
                  }
                }

                /// <summary>Field number for the "PokemonId" field.</summary>
                public const int PokemonIdFieldNumber = 2;
                private int pokemonId_;
                public int PokemonId {
                  get { return pokemonId_; }
                  set {
                    pokemonId_ = value;
                  }
                }

                public override bool Equals(object other) {
                  return Equals(other as Pokemon);
                }

                public bool Equals(Pokemon other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Id != other.Id) return false;
                  if (PokemonId != other.PokemonId) return false;
                  return true;
                }

                public override int GetHashCode() {
                  int hash = 1;
                  if (Id != 0UL) hash ^= Id.GetHashCode();
                  if (PokemonId != 0) hash ^= PokemonId.GetHashCode();
                  return hash;
                }

                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                public void WriteTo(pb::CodedOutputStream output) {
                  if (Id != 0UL) {
                    output.WriteRawTag(8);
                    output.WriteUInt64(Id);
                  }
                  if (PokemonId != 0) {
                    output.WriteRawTag(16);
                    output.WriteInt32(PokemonId);
                  }
                }

                public int CalculateSize() {
                  int size = 0;
                  if (Id != 0UL) {
                    size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
                  }
                  if (PokemonId != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(PokemonId);
                  }
                  return size;
                }

                public void MergeFrom(Pokemon other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Id != 0UL) {
                    Id = other.Id;
                  }
                  if (other.PokemonId != 0) {
                    PokemonId = other.PokemonId;
                  }
                }

                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        input.SkipLastField();
                        break;
                      case 8: {
                        Id = input.ReadUInt64();
                        break;
                      }
                      case 16: {
                        PokemonId = input.ReadInt32();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class NearbyPokemonProto : pb::IMessage<NearbyPokemonProto> {
            private static readonly pb::MessageParser<NearbyPokemonProto> _parser = new pb::MessageParser<NearbyPokemonProto>(() => new NearbyPokemonProto());
            public static pb::MessageParser<NearbyPokemonProto> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::PokemonGo.RocketAPI.GeneratedCode.MapObjectsResponse.Types.Payload.Descriptor.NestedTypes[7]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public NearbyPokemonProto() {
              OnConstruction();
            }

            partial void OnConstruction();

            public NearbyPokemonProto(NearbyPokemonProto other) : this() {
              pokedexNumber_ = other.pokedexNumber_;
              distanceMeters_ = other.distanceMeters_;
              encounterId_ = other.encounterId_;
            }

            public NearbyPokemonProto Clone() {
              return new NearbyPokemonProto(this);
            }

            /// <summary>Field number for the "PokedexNumber" field.</summary>
            public const int PokedexNumberFieldNumber = 1;
            private int pokedexNumber_;
            public int PokedexNumber {
              get { return pokedexNumber_; }
              set {
                pokedexNumber_ = value;
              }
            }

            /// <summary>Field number for the "DistanceMeters" field.</summary>
            public const int DistanceMetersFieldNumber = 2;
            private float distanceMeters_;
            public float DistanceMeters {
              get { return distanceMeters_; }
              set {
                distanceMeters_ = value;
              }
            }

            /// <summary>Field number for the "EncounterId" field.</summary>
            public const int EncounterIdFieldNumber = 3;
            private ulong encounterId_;
            public ulong EncounterId {
              get { return encounterId_; }
              set {
                encounterId_ = value;
              }
            }

            public override bool Equals(object other) {
              return Equals(other as NearbyPokemonProto);
            }

            public bool Equals(NearbyPokemonProto other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (PokedexNumber != other.PokedexNumber) return false;
              if (DistanceMeters != other.DistanceMeters) return false;
              if (EncounterId != other.EncounterId) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (PokedexNumber != 0) hash ^= PokedexNumber.GetHashCode();
              if (DistanceMeters != 0F) hash ^= DistanceMeters.GetHashCode();
              if (EncounterId != 0UL) hash ^= EncounterId.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (PokedexNumber != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(PokedexNumber);
              }
              if (DistanceMeters != 0F) {
                output.WriteRawTag(21);
                output.WriteFloat(DistanceMeters);
              }
              if (EncounterId != 0UL) {
                output.WriteRawTag(24);
                output.WriteUInt64(EncounterId);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (PokedexNumber != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PokedexNumber);
              }
              if (DistanceMeters != 0F) {
                size += 1 + 4;
              }
              if (EncounterId != 0UL) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EncounterId);
              }
              return size;
            }

            public void MergeFrom(NearbyPokemonProto other) {
              if (other == null) {
                return;
              }
              if (other.PokedexNumber != 0) {
                PokedexNumber = other.PokedexNumber;
              }
              if (other.DistanceMeters != 0F) {
                DistanceMeters = other.DistanceMeters;
              }
              if (other.EncounterId != 0UL) {
                EncounterId = other.EncounterId;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 8: {
                    PokedexNumber = input.ReadInt32();
                    break;
                  }
                  case 21: {
                    DistanceMeters = input.ReadFloat();
                    break;
                  }
                  case 24: {
                    EncounterId = input.ReadUInt64();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
